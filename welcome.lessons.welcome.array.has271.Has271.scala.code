def has271(nums:Array[Int]): Boolean = {
  val l=nums.length
  l match {
    case 0 => false
    case 1 => false
    case 2 => false
    case _ if ((nums(0)+5==nums(1))&&((nums(0)-1==nums(2))||(differeOuPas(nums(0),nums(2)))))=> return true
    case _ => has271(copieTableauSaufUn(nums))
  }
}

def copieTableauSaufUn (tab:Array[Int]):Array[Int] = {
  var l = tab.length
  var res= new Array[Int] (l-1)
  for (i<- 0 to l-2){
    res(i)=tab(i)
  }
  return res
}
               
def differeOuPas (a:Int,b:Int):Boolean ={
  val c=a-1
  b match{
    case (c+2) => true
    case (c+1) =>true
    case c => true
    case (c-1) => true
    case (c-2) => true
    case _ => false
  }
}