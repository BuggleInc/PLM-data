def step(rule:Array[Char], colors:Array[Color]) {
	var c:Int = 0;
	var j:Int = appartient(getCouleurSol(), colors);
	if(j != -1) {
		execute (j, rule, colors);
	}
	else {
		colors(c) = getCouleurSol();
		c = c+1;
	}
}
def appartient(c:Color, colors:Array[Color]):Int = {
	var flag:Int = -1;
	for (i <-0 to colors.length-1) {
		if (colors(i) == c) flag = i;
	}
	return flag;
}
def execute(i:Int, rule:Array[Char], colors:Array[Color]) {
	rule(i) match {
		case 'L' => gauche(); setCouleurBrosse(colors((i+1) % (colors.length)));
		baisseBrosse(); leveBrosse(); avance();
		case 'R' => droite(); setCouleurBrosse(colors((i+1) % (colors.length)));
		baisseBrosse(); leveBrosse(); avance();
	}
}
