override def run() {
  val nbOfRow:Int = 3 //Considering that it's a square, count(row) = count(col) and we're only countig preset
  def point() {
    brushDown();
    brushUp();
  }
  def makeV() {
    for(i <- 1 to 4){
      i match {
        case 1 => setBrushColor(Color.YELLOW);
        case 2 => setBrushColor(Color.RED);
        case 3 => setBrushColor(Color.BLUE);
        case 4 => setBrushColor(Color.GREEN);
      }
      point();
      forward();
      left();
      forward();
      point();
      backward();
      right();
      forward();
      point();
      forward(2);
      left();
      forward(2);
    }
  }
  def makePattern() {
    forward(2);
    makeV();
    backward(2);
  }
  def oneRight() {
    forward(7);
  }
  def oneUp() {
    left();
    forward(7);
    right();
  }
  def oneLine(n:Int){
    for(i <- 1 to n){
      makePattern();
      oneRight();
    }
  }
  def theWholeThing(n:Int){
    for(i <- 1 to n){
      oneLine(n);
      oneUp();
    }
  }
  theWholeThing(nbOfRow)
}