override def run() {
  // variables
  var hauteur : Int = getMondeHauteur()
  var largeur : Int = getMondeLargeur()
  
  //---
  def trouverSortie() {
  	for (x<-0 to largeur-1 ; y <- 0 to hauteur-1)
    		{if (aBiscuit(l,h)) {setIndication(x,y,0)}}
  }
  
  //---
  def marquerCasesAdjacentes(i:Int) {
    for (h<-0 to hauteur-1 ; l <- 0 to largeur-1){
      // on consid?re la case (x,y) num?rot?e i
      if (getIndication(x,y)==i) {
        
        //case au dessus
        if (y >0 && !aMurNord(x,y) && getIndication(x,y-1)==9999)
        		{setIndication(x,y-1,i+1)}
        //case ? droite
        if (x < largeur-1 && !aMurOuest(x,y) && getIndication(x+1,y)==9999)
        		{setIndication(x+1,y,i+1)}
        //case au dessous
        if (y < hauteur-1 && !aMurNord(x,y+1) && getIndication(x,y+1)==9999)
        		{setIndication(x,y+1,i+1)}
        //case ? gauche
        if (x > 0 && !aMurOuest(x-1,y) && getIndication(x-1,y)==9999)
        		{setIndication(x-1,y,i+1)}
      }
    }
  }
  
  //---
  def estMondeMarque():Boolean = {
    for (h<-0 to hauteur-1 ; l <- 0 to largeur-1)
    		{if (getIndication(x,y)==9999) {return false}}
    return true
  }
  
  //---
  def directionPlusCourte() {
    ind = getIndication(getX(),getY())
    //case au dessus
    if (y >0 && !aMurNord(x,y) && getIndication(x,y-1)==ind-1)
    		{setDirection(Direction.NORD)}
    //case ? droite
    if (x < largeur-1 && !aMurOuest(x,y) && getIndication(x+1,y)==ind-1)
    		{setDirection(Direction.EST)}
    //case au dessous
    if (y < hauteur-1 && !aMurNord(x,y+1) && getIndication(x,y+1)==ind-1)
    		{setDirection(Direction.SUD)}
    //case ? gauche
    if (x > 0 && !aMurOuest(x-1,y) && getIndication(x-1,y)==ind-1)
    		{setDirection(Direction.OUEST)}
    }
  
  //---
  trouverSortie()
	var ind : Int = 0
  while (!estMondeMarque()) {marquerCasesAdjacentes(ind); ind+=1}
  while (!estSurBiscuit) {
    directionPlusCourte(); avance()}
	prendBiscuit()
  }