def cocktailSort2()
/*debut=0; fin=lgr-2
Faire
  Pour tout i dans [debut,fin], faire:
    si i et i+1 doivent être échangées, le faire
  fin -= 1 (cela veut dire fin = fin -1)
  Pour tout i dans [fin, debut] en descendant, faire:
    si i et i+1 doivent être échangées, le faire
  debut += 1 (ce qui veut dire debut = debut + 1)
tant qu'au moins l'un des parcours a inversé un élément
*/
 
{
	var debut=0
	var fin=getNombreValeurs() - 2

	do
	{
		inverse=false
		for(i<-debut to fin)
		{
			if(plusPetit(i+1,i))
			{
				echange(i,i+1)
				inverse=true
				fin=fin-1
			}
		}

			for(i<-fin to debut by -1)
			{
				if(plusPetit(i+1,i)
				{
					echange(i,i+1)
					inverse=true
					debut=debut+1	
				}
			}
	}
}













































/*def cocktailSort() 
/*Faire
  Pour tout i dans [0,lgr-2], faire:
    si i et i+1 doivent être échangées, le faire
  Pour tout i dans [lgr-2,0] en descendant, faire:
    si i et i+1 doivent être échangées, le faire
tant qu'au moins l'un des parcours a inversé un élément

{
	var n=getNombreValeurs()
	var inverse=true

		do
		{
			inverse=false
			for(i<-0 to n-2)
			{
				if(plusPetit(i+1,i))
				{
				echange(i,i+1)
				inverse=true	
				}
			}

				for(i<-(n-2) to 0 by -1)
			{
				if(plusPetit(i+1,i))
				{
				echange(i,i+1)
				inverse=true
				}
			}
			
		}while(inverse)
	
}
*/








/*
 * /*
 * def bubbleSort()  
{
var n=getNombreValeurs() 
var inverse=true
do
	{	
		inverse=false
		
		for (i<-0 to n-2)
		{	
			if (plusPetit(i+1,i))
			{
			echange(i,i+1)
			inverse=true
			}
		}


	} while(inverse)

}


*/
 */
















/*
 def bubbleSort3() 
{
var n=getNombreValeurs()
var inverse=true

	for(i<-(n-2) to 0 by -1)
	{
		inverse=false
		
		for(j<-0 to i)
		{
			if(plusPetit(j+1,j))
			{
			echange(j,j+1)
			inverse=true	
			}

			
		}
		if(inverse==false)
			{
			return
			}
						
	}
}
 */