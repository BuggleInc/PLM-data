<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h1>Se poser pour les nuls</h1>

<p>Bravo ! Vous avez gagné dans une boîte de céréales un voyage (aller simple)
pour Mars. La NASA vous a même fourni un module d'excursion lunaire pour
l'occasion, et c'est donc avec ce véhicule que vous voyagerez.</p>

<p>Avant le décollage, vous devez vous entraîner sur simulateur aux bases de
l'alunissage. Si tout se passe comme prévu, vous ne devriez pas avoir à
voler en mode manuel, mais mieux vaut prévenir que guérir, comme ils disent.</p>

<p>Votre mission est de <b>poser le module avec une vitesse verticale
inférieure à 10 m/s</b>. Il y a deux façons d'influer sur la trajectoire du
module : en modifiant son angle, ou en réglant la poussée de son
moteur. Dans cette simulation, nous ne nous intéressons qu'à la poussée,
exprimée en m/s².</p>

<p>Vous devez écrire le code qui sera appellé tous les dixièmes
de seconde pendant la simulation. Assurez vous que votre code ne dure pas
trop longtemps, et évitez en particulier les boucles <code>while</code>. Il
faut juste ajuster la poussée du moteur en utilisant la fonction
<code>void setPousseeDesiree(int
poussee)</code> où <code>poussee</code> est un
entier entre 0 et 4 (représentant une poussée entre 0 m/s² et 4 m/s²). Vous
ne pouvez incrémenter ou décrémenter la poussée que de 1 entre deux pas de
la simulation. Ainsi, si la poussée du moteur est actuellement de 2 et que
vous demandez 4, vous n'aurez que 3 à la prochaine étape. Si vous demandez
une valeur inférieure à 0 (ou supérieure à 4), tout se passera comme si vous
aviez demandé 0 (ou 4).</p>

<p>Afin de prendre des décisions informées, vous pouvez demander des
informations sur l'état actuel du module. Dans cette simulation, vous ne
serez probablement intéressé que par sa position verticale (accessible grâce
à <code>double getY()</code>) et sa vitesse
verticale (accessible grâce à <code>double
getVitesseY()</code>). Vous pouvez également demander
la poussée actuelle du moteur (avec <code>int
getPoussee()</code>) si vous avez oublié ce que vous
avez demandé. Rappelez vous que la gravité martienne est de 3.711 m/s², cela
peut vous être utile.</p>

<p>Une dernière chose : le module est plutôt petit, et vous n'avez pas tant de
carburant que cela. À chaque pas de simulation, il consomme autant d'unité
de carburant que la poussée actuelle du moteur. Si vous tombez en panne
sèche, vous serez en chute libre alors attention ! Vous pouvez consulter le
niveau du réservoir avec <code>int
getFuel()</code>.</p>

<p>Bon courage !</p>
</body></html>