override def run() {
var sommeAngle:Int = 0;
def keepHandOnSideWall() = { 
	if (!estFaceMur()) {
	avance()
	gauche()
	sommeAngle = sommeAngle +1
	if (estFaceMur()) {
		droite()
		sommeAngle = sommeAngle -1 
	} else {
		avance()
		gauche()
		sommeAngle = sommeAngle -1 
		if (estFaceMur()) {
			droite()
			sommeAngle = sommeAngle-1
		} else {
			avance()
			gauche()
			sommeAngle = sommeAngle + 1
			if (estFaceMur()) {
				droite()
				sommeAngle = sommeAngle - 1
			}else avance();gauche();sommeAngle = sommeAngle +1
		}
	}
		
} else droite();sommeAngle= sommeAngle-1
}

def isDirectionFree(dir:Direction): Boolean = {
	var direct = getDirection();
	while (getDirection() != dir) {
		droite()
		sommeAngle = sommeAngle-1
	}
	if (estFaceMur()) {
		setDirection(direct)
		return true
	} else {
		setDirection(direct)
		return false
	}
}

def testg():Boolean = {
	var rep = false 
	gauche() 
	rep = estFaceMur()
	droite()
	return rep
}
def chercheMur() = {
	if (estFaceMur()) {
		droite()
		sommeAngle=sommeAngle-1
	} else {
		avance()
	}
}
def aramis() = {
	while (!testg()) {
	chercheMur()
	

}
keepHandOnSideWall()
}

var e = 0 
while (!(estSurBiscuit())) {
	e match {
		case 1 => {while (isDirectionFree()) {aramis()}; e = 0}
		case 0 => {setDirection(Direction.NORD); while (!estFaceMur()) {avance()}; e = 1;droite()}
		case _ => println( "Ce cas ne devrait pas arriver. Corrigez ce probléme svp" )
	}
}
prendBiscuit()
}
