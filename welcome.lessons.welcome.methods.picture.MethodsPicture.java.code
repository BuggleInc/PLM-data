public void run() {
	//make 3 rows
	for(int x = 0; x < 3; x++){
		rowOfPatterns();
		if(x < 2){
			shiftBuggle();
		}else{
			resetBuggle();
		}
	}
}//end run

void makePattern() {
	//this draws 4 V's of different colours
	makeV(Color.yellow);
	makeV(Color.red);
	makeV(Color.blue);
	makeV(Color.green);
}//end method

void makeV(Color c){
int steps = 5;

		//this loop draws a V
		for(int x = 0; x <= steps; x++){
			
			if(x == 1 || x == 3 || x == 5){
				setBrushColor(c);
				brushDown();
				brushUp();
			}

			if(x == 3 || x == 4){
				left();
			}

			if(x < steps){
				forward();
			}
				
			if(x == 5){
				left();
				forward();
				left();
				forward();
				forward();
				left();
			}
		}//end for
}// end makeV

void newStartPos(){
int steps = 5;
	//move buggle to new start position
	//to make a new pattern
	for(int j = 0; j < steps; j++){
		forward();
	}
}//end newStartPos

//move buggle so it can start a new row
void shiftBuggle(){
int steps = 15;

	left();
	//go up 5 steps then across 10 steps
	for(int i = 1; i <= steps; i++){
		forward();
		if(i == 5){
			left();
		}
	}
	
	back();
}//en shiftBuggle

//move buggle back to starting cell after drawing the last row
void resetBuggle(){
int steps = 20;

	back();
	//go across 10 steps then down 10 steps	
	for(int x = 1; x <= steps; x++){
		forward();
		if(x == 10 || x == 20){
			left();
		}
	}
}//end resetBuggle

void rowOfPatterns(){
	makePattern();
	newStartPos();
	makePattern();
	newStartPos();
	makePattern();
}//end rowOfPatterns

