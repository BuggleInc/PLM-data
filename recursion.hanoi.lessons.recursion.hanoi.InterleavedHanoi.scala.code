def hanoi(height:Int, src:Int, other:Int, dst:Int) {
 
  height match {
    
    case 1 => { move(src, dst) }
    
    case n => {
      hanoi(n - 1, src, dst, other)
      move(src, dst)
      hanoi(n - 1, other, src, dst)
    }
  } 
}

def interleavedHanoi(height:Int, src1:Int, src2:Int, other:Int, dst:Int) {
  
  height match {
    
    case 1 => {
      move(src1, dst)
      move(src2, dst)
    }
    
    case n => {
      hanoi((n - 1), src1, dst, other)
      move(src1, dst)
      hanoi((n - 1), src2, dst, src1)
      move(src2, dst)
      interleavedHanoi(n - 1, other, src1, src2, dst)
    }
  }
}