  override def initialize() {}


  override def step() {
  	
  def getLandingZone():Array[Point] = {
var sol=getSol()
var l=sol.length
var test1 = sol(0)
var test2 = sol(1)
var dabs : Double = 0
var fabs : Double= 0
var ord : Double = 0
var i = 0
	for (k<- 0 to l-2){ 
	test1 = sol(k)
	test2 = sol(k+1)
	if (test1.y == test2.y){
	return Array(new Point(test1.x,test1.y),new Point(test2.x,test2.y))
	}}
return Array(Point(0,0), Point(1999,0))
  }
 
var zone = getLandingZone()

def largeur (a:Double, b:Double):Double = {
	return Math.abs(b-a)
}
  

  	def position(): Int = {
	if (getX() <= zone(0).x) {return 0}
	else if ( getX() >= zone(1).x) {return 2}
	else {return 1}
  	}

  	
  	if (position() == 0) {
  		setAngleDesire(-20)
  		setPousseeDesiree(3) 
  	}
  	if (position() == 1) { 
  		if (getVitesseX() >= 1) {
  		setAngleDesire(40)
  		setPousseeDesiree(4)	}
  		else if (getVitesseX() <= -1) {
  			setAngleDesire(-20)
  			setPousseeDesiree(4)
}
else {setAngleDesire(0)
if (getVitesseY() <= -7) {setPousseeDesiree(4)} else {setPousseeDesiree(0)} }
  	}
  	if (position() == 2) {
  		setAngleDesire(10)
  		setPousseeDesiree(2)
  	}

  }
