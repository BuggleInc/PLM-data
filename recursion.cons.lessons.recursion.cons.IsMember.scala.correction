$package
import plm.universe.bat.{BatEntity,BatWorld,BatTest}; 
import plm.universe.World; 
import scala.collection.JavaConverters._;
class isMember extends BatEntity { 
   override def run(t: BatTest) {
 val res = isMember( (if (t.getParameter(0) == null) {  Nil} else if (t.getParameter(0).isInstanceOf[lessons.recursion.cons.universe.RecList]) {  t.getParameter(0).asInstanceOf[lessons.recursion.cons.universe.RecList].toList().asInstanceOf[java.util.List[Int]].asScala.toList} else {  t.getParameter(0).asInstanceOf[java.util.List[Int]].asScala.toList}) , t.getParameter(1).asInstanceOf[Int]);
try {
   t.setResult(if (res==null||res == Nil) {null} else {res.asInstanceOf[List[Int]].asJava})
} catch {
  case e:java.lang.ClassCastException => t.setResult(res)
}

   }
def isMember(l:List[Int], v:Int): Boolean = {
  l match {
    case a::b if a==v => true
    case a::b         => isMember(b,v)
    case _    => false
  }
} }