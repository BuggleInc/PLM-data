override def run()
{
  var n = getMondeLargeur();
  var m = getMondeHauteur();
  
  var xSortie = 0;
  var ySortie = 0;
  
  for (x <- 0 to n-1)
  {
    for (y <- 0 to m-1)
    {
      if (aBiscuit(x,y))
      {
        xSortie = x;
        ySortie = y;
      }
    }
  }
  //if (getIndication(0,0) != 9999) avance();
  //return;
	noteIndication(xSortie, ySortie, 0);
  
  while (!estSurBiscuit()) trouverChemin();
  prendBiscuit();
}

def noteIndication(x:Int, y:Int, i:Int)
{
  var n = getMondeLargeur()-1;
  var m = getMondeHauteur()-1;
  
  setIndication(x,y,i);
  
  if (getIndication(x,y-1) != 9999 && !aMurNord(x,y) && y>0) noteIndication(x, y-1, i+1);
  if (getIndication(x-1,y) != 9999 && !aMurOuest(x,y) && x>0) noteIndication(x-1, y, i+1);
  if (y<m && getIndication(x,y+1) != 9999 && !aMurNord(x,y+1)) noteIndication(x, y+1, i+1);
  if (x<n && getIndication(x+1,y) != 9999 && !aMurOuest(x+1,y)) noteIndication(x+1, y, i+1);
}

def trouverChemin()
{
  var dir = 0;
  var indic = 0;
  var minIndic = 9999;
  var xModDir:List[Int] = List(0, 1, 0, -1);
  var yModDir:List[Int] = List(1, 0, -1, 0);
  
  for (i <- 1 to 4)
  {
    if (!estFaceMur())
    {
      indic = getIndication(getX()+xModDir(i), getY()+yModDir(i));
      
      if (indic < minIndic) dir = i;
    }
  }
  
  indic match
  {
    case 0 => setDirection(Direction.NORD);
    case 1 => setDirection(Direction.EST);
    case 2 => setDirection(Direction.SUD);
    case 3 => setDirection(Direction.OUEST);
  }
  avance();
}