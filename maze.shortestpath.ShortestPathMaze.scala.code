override def run() {
  
  
  val sortie = findExit();
  marquerSol(sortie, 0);
//  parcourirPath();
  
}

val X = getWorldWidth();
val Y = getWorldHeight();

def findExit() : Any = {
  for(x <- 0 until X)
	  for(y <- 0 until Y)
  		if(hasBaggle(x,y))
  			return (x,y);
}

def marquerSol(casee: Tuple2, numero:Int) {
  val x = casee(0);
  var y = casee(1);
  setIndication(x, y, numero);
  
  
  if(y > 0 && !hasTopWall(x,y))
  	marquerSol((x,y-1), numero+1);
  if(y < Y-1 && !hasTopWall(x, y+1))
  	marquerSol((x,y+1), numero+1);
  
  
  if(x > 0 && !hasLeftWall(x, y))
  	marquerSol((x-1,y), numero+1);
  if(x < X-1 && !hasLeftWall(x+1, y))
  	marquerSol((x+1,y), numero+1);
  
}