def combSort() {
	var ecart: Int = getNombreValeurs()
	var i: Int = 0;
	var lastSwapped: Boolean = true

	while (ecart > 1 || lastSwapped) {
		lastSwapped = false
		if (ecart>1)
			ecart = (ecart.toDouble / 1.3).toInt
		i = 0;
		while (i+ecart < getNombreValeurs() {
			if (plusPetit(i+1,i)) {
				echange(i,i+1)
				if (i+ecart+1 == getNombreValeurs())
					lastSwapped = true
			}
			i++
		}
	}
}

/*ecart = lgr;
 faire 
   si ecart>1 alors
     ecart = ecart / 1.3
   i = O
   tant que i+ecart < lgr faire:
     si i et i+ecart doivent être inversés, le faire
     incrémenter i de 1
 tant que l'écart est plus grand que 1 ou que le dernier
 parcours a inversé au moins un élément*/