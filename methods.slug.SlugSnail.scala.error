Compilation error:
SlugSnail:5: error: not enough arguments for method isFacingTrail: (c: java.awt.Color)Boolean.
Unspecified value parameter c.
                               while (!isOverBaggle()) {if (!isFacingTrail()) {left(); if (!isFacingTrail()) {left()}; if (!isFacingTrail()) {right(); right()}}; forward()}
                                                                          ^SlugSnail:5: error: not enough arguments for method isFacingTrail: (c: java.awt.Color)Boolean.
Unspecified value parameter c.
                               while (!isOverBaggle()) {if (!isFacingTrail()) {left(); if (!isFacingTrail()) {left()}; if (!isFacingTrail()) {right(); right()}}; forward()}
                                                                                                         ^SlugSnail:5: error: not enough arguments for method isFacingTrail: (c: java.awt.Color)Boolean.
Unspecified value parameter c.
                               while (!isOverBaggle()) {if (!isFacingTrail()) {left(); if (!isFacingTrail()) {left()}; if (!isFacingTrail()) {right(); right()}}; forward()}
                                                                                                                                         ^SlugSnail:16: error: value s is not a member of Nothing
possible cause: maybe a semicolon is missing before `value s'?
                                   else {forward(); if (getGroundColor()==c) {backward(); return true} else {backward(); return false}}}s your isFacingTrail method 
                                                                                                                                        ^SlugSnail:16: error: not found: value your
                                   else {forward(); if (getGroundColor()==c) {backward(); return true} else {backward(); return false}}}s your isFacingTrail method 
                                                                                                                                          ^SlugSnail:16: error: not found: value method
                                   else {forward(); if (getGroundColor()==c) {backward(); return true} else {backward(); return false}}}s your isFacingTrail method 
                                                                                                                                                             ^