def retourEnPlace(length:Double, angle:Double) {
  leveCrayon();
  gauche(180);
  avance (length);
  gauche(180-angle)
  baisseCrayon();
}

def tree(steps:Int, length:Double, angle:Double, shrink:Double)    {
	if (steps!=0) {
    
  	avance(length); //tronc
    
    gauche(angle); //viser gauche 
    tree(steps-1, length*shrink, angle, shrink); //faire le sous arbre
    droite(angle);
    retourEnPlace(length, angle);
    
    droite(angle);
    tree(steps-1, length*shrink, angle, shrink);
    gauche(angle);
		retourEnPlace(length,angle);
  }
  else {
    //rien
  }
}