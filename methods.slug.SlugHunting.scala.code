def hunt() {
  
  	(isFacingTrail(),estSurBiscuit()) match {
    
    	case (true,false) => avance(); baisseBrosse(); leveBrosse(); hunt();
    
    	case (false,false) => droite();
    												if (isFacingTrail()) {
                    
        	           				hunt();
                    
          	       					}
    
    												else {
                    
              	     				gauche();
                	   				gauche();
                  	 				hunt();
                    
                  					}
      
      case (_,true) => prendBiscuit();
  
		}

}



def isFacingTrail():Boolean = {
  
  if (estFaceMur()) {
    
    return false
    
  } 
  
  else {
  
  	avance();
  
  	if (getCouleurSol() == Color.green) {
    
    	recule();
    	
      return true
    
  	}
    
    else {
      
      recule();
      return false
      
    }
  
  }

}

/* (x,y) match {
 case (0,0) => println("C'est le point origine")
 case (_,0) => println("C'est un point de l'ordonnÃ©e")
 case (0,_) => println("C'est un point de l'abscisse")
 case (_,_) => println("C'est un point quelconque")
} */