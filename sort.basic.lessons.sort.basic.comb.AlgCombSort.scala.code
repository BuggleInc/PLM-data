def combSort() {
	var ecart:Int = getNombreValeurs()
	var i:Int = 0
	var inverse:Boolean = true 
	
	do { 
		inverse = false
		if ( ecart > 1) { 
			ecart = (ecart.toDouble / 1.3).toInt
		}
		
		while ( i + ecart < getNombreValeurs() ) {
			if ( plusPetit(i+ecart,i) ) {
				echange(i,i+ecart)
				inverse = true 
				i = i + 1
			}
		}
	}
	while ( ecart>1 || inverse )
}


 ecart = lgr;
 faire 
   si ecart>1 alors
     ecart = ecart / 1.3
   i = O
   tant que i+ecart < lgr faire:
     si i et i+ecart doivent être inversés, le faire
     incrémenter i de 1
 tant que l'écart est plus grand que 1 ou que le dernier parcours a inversé au moins un élément