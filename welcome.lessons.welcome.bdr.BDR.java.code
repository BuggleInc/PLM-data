interface IAction {
  public void execute();
}
abstract class Action implements IAction {
  public static boolean stop = false;
  public static IAction build(String str) {
    switch(str) {
      case "R" : return new RAction();
      case "L" : return new LAction();
      default : return new UnhandledAction();
    }
  }
}
class UnhandledAction extends Action {
  public void execute() {
    Action.stop = true;
  }
}
class RAction extends Action {
  public void execute() {
    right();
    forward();
  }
}
class LAction extends Action {
  public void execute() {
    left();
    forward();
  }
}
while(!Action.stop) {
  Action.build(litMessage()).execute();
}