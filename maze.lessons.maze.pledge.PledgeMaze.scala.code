override def run() {
var sommeAngle:Int = 0;
def keepHandOnSideWall() = { 
	if (!estFaceMur()) {
	avance()
	gauche()
	if (estFaceMur()) {
		droite()
	} else {
		sommeAngle = sommeAngle + 1
		avance()
		gauche()
		if (estFaceMur()) {
			droite()
		} else {
			avance()
			gauche()
			sommeAngle = sommeAngle + 1
			if (estFaceMur()) {
				droite()
			}else avance();gauche();sommeAngle = sommeAngle +1
		}
	}
		
} else droite();sommeAngle= sommeAngle - 1
}

def isDirectionFree(dir:Direction): Boolean = {
	var direct = getDirection();
	while (getDirection() != dir) {
		droite()
		sommeAngle = sommeAngle-1
	}
	if (estFaceMur()) {
		setDirection(direct)
		return true
	} else {
		setDirection(direct)
		return false
	}
}

def testg():Boolean = {
	var rep = false 
	gauche() 
	rep = estFaceMur()
	droite()
	return rep
}
def chercheMur() = {
	if (estFaceMur()) {
		droite()
	} else {
		avance()
	}
}
def aramis() = {
	while (!testg()) {
	chercheMur()
	

}
keepHandOnSideWall()
}

 
while (!(estSurBiscuit())) {
	sommeAngle match {
		case 3 => keepHandOnSideWall()
		case 2 => keepHandOnSideWall()
		case 1 => keepHandOnSideWall()
		case 0 => { if (isDirectionFree(Direction.NORD)) { while (!estFaceMur()) { avance() }; droite()} else keepHandOnSideWall()}
		case _ => println( "Ce cas ne devrait pas arriver. Corrigez ce probléme svp" )
	}
}
prendBiscuit()
}
