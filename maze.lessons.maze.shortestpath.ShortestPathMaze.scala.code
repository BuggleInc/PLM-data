var casesMarquees:Int = 1

def trouveSortie(): Array[Int] = {
  var result: Array[Int] = new Array[Int](2)
  
  result(0); result(1) = 0
  
  var xMax:Int = getMondeLargeur() - 1
  var yMax:Int = getMondeHauteur() - 1
  
  for (x <- 0 to xMax) {
    for (y <- 0 to yMax) {
      if (aBiscuit(x, y)) {
        result(0) = x; result(1) = y
        
        return result
      }
    }
  }
  
  return result
}

def marqueCasesAccessibles(pos: Array[Int], poids: Int) {
  // Case au dessus.
  if (!aMurNord(pos(0), pos(1))) {
    setIndication(pos(0), pos(1) - 1, poids + 1)
    
    casesMarquees += 1
  }
  
  // Case en dessous.
  if (!aMurNord(pos(0), pos(1) + 1)) {
    setIndication(pos(0), pos(1) + 1, poids + 1)
    
    casesMarquees += 1
  }
  
  // Case à guache.
  if (!aMurOuest(pos(0), pos(1))) {
    setIndication(pos(0) - 1, pos(1), poids + 1)
    
    casesMarquees += 1
  }
  
  // Case à droite.
  if (!aMurOuest(pos(0) + 1, pos(1))) {
    setIndication(pos(0) + 1, pos(1), poids + 1)
    
    casesMarquees += 1
  }
}

def ecritIndications() {
  var poidsCourant:Int = 0
  var posSortie: Array[Int] = trouveSortie()
  
  var xMax:Int = getMondeLargeur() - 1
  var yMax:Int = getMondeHauteur() - 1
  
  setIndication(posSortie(0), posSortie(1), 0)
  
  while (casesMarquees != getMondeHauteur() * getMondeLargeur()) {
    for (x <- 0 to xMax) {
      for (y <- 0 to yMax) {
        if (getIndication(x, y) == poidsCourant) {
          marqueCasesAccessibles(Array(x, y))
        }
      }
    }
    
    poidsCourant += 1
  }
}

override def run() {
  ecritIndications()
}