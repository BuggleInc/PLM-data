    /* Do not change these definitions */
    val STOP   = 0;
    val NOTURN = 1;
    val LEFT   = 2;
    val BACK   = 4;
    val RIGHT  = 8;

    val NEXT_COLOR = 0;
    val NEXT_MOVE  = 1;
    val NEXT_STATE = 2;

    val nbrState = 2;
    val nbrCouleur = 2;

    var nbSteps:Int = 8342;
  
    var rule:Array[Array[Array[Int]]] = null  

        rule = new Array(nbrState)
		for(i<-0 to nbrState-1){
			rule(i) = new Array(nbrCouleur)
		}
    		for(i<-0 to nbrState-1){
    			for(j<-0 to nbrCouleur-1){
    				rule(i)(j) = new Array(3)
    			}
    		}
    		for(i<-0 to nbrState-1){
    		for(j<-0 to nbrCouleur-1){
    			
    			if(i==0){
    				rule(i)(j)(0)=1
    				rule(i)(j)(1)=8
    			}
    			else{
    				rule(i)(j)(0)=0
    				rule(i)(j)(1)=1
    			}
			rule(i)(j)(2)=j
    		}
    		}
    
    

    /** init the rule array from a string defining a Langton's ant 
     * 
     *  You can use this method inside your init() method if you want 
     *  to test langton's ant instead of full turmites.
     */
    def initLangton(name:String) {
        val nbColors = name.length(); /* As many colors as letters in the ant's name */

        rule = new Array[Array[Array[Int]]] (1); /* one state only */
        rule(0) = new Array[Array[Int]] (nbColors); /* As many colors as letters in the ant's name */
        for (i <- 0 to nbColors-1) {
            rule(0)(i) = new Array[Int] (3); /* every command set has 3 elements */ 

            rule(0)(i)(NEXT_COLOR) = (i+1) % nbColors;

            if (name.charAt(i) == 'L') {
                rule(0)(i)(NEXT_MOVE) = LEFT;            
            } else if (name.charAt(i) == 'R') {
                rule(0)(i)(NEXT_MOVE) = RIGHT;
            } else {
                System.out.println("Unknown command in your ant's name: "+name.charAt(i));
            }

            rule(0)(i)(NEXT_STATE) = 0; /* only one state */

            // println("{"+rule(0)(i)(NEXT_COLOR)+","+rule(0)(i)(NEXT_MOVE)+","+rule(0)(i)(NEXT_STATE)+"}");
        }
    }
    def init() {
        

        /* Something like 
         *   nbSteps = 42;
         *   rule = Array( Array( Array(0,NOTURN,0), Array(0, NOTURN, 0) ) ); 
         * but with possibly more states (ie, bigger second dimension), and more color (ie bigger third -- internal -- dimension) 
         * and naturally, less boring than this turmite doing absolutely nothing (runs forward endlessly).
         */

        /* It can also be something like
         *   nbSteps = 42;
         *   initLangton("RL");
         */

        /* remember to send your best creations for inclusion in the gallery */
    }
