Erreur de compilation :
DutchFlagAlgo:18: error: not found: type Booleab
def rBon(i:int):Booleab = {
                ^DutchFlagAlgo:18: error: not found: type int
def rBon(i:int):Booleab = {
           ^DutchFlagAlgo:8: error: missing argument list for method rBon in class DutchFlagAlgo
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `rBon _` or `rBon(_)` instead of `rBon`.
        case BLEU => if (!rBon){echange(i,taille-1)}
                          ^DutchFlagAlgo:27: error: not found: type Booleab
def bBon(i:int):Booleab = {
                ^DutchFlagAlgo:27: error: not found: type int
def bBon(i:int):Booleab = {
           ^DutchFlagAlgo:9: error: missing argument list for method bBon in class DutchFlagAlgo
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `bBon _` or `bBon(_)` instead of `bBon`.
        case ROUGE =>if (!bBon){echange(i,0)}
                          ^