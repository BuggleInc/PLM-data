public void combSort() {

	int lgr = getNombreValeurs();
	int ecart = lgr;
	boolean inversion = true;
	int i=0;
	do
	{
		inversion = false;
		
		if(ecart>=1)
		{
			ecart = (int) (ecart / 1.3) ;
		
		}
		i=0;
		while(i+ecart  < lgr)
			{
				inversion = false;
				
				if(getValeur(i)>getValeur(i+ecart))
				{
					echange(i,i+ecart);
					inversion = true;
				}
				i++;
						
				
			}
		
	}while(inversion | ecart >= 1);

}

/*	
ecart = lgr;
 faire 
   si ecart>1 alors
     ecart = ecart / 1.3
   i = O
   tant que i+ecart < lgr faire:
     si i et i+ecart doivent être inversés, le faire
     incrémenter i de 1
 tant que l'écart est plus grand que 1 ou que le dernier parcours a inversé au moins un élément
 */