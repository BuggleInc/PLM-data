final static int STOP   = 0;
final static int NOTURN = 1;
final static int LEFT   = 2;
final static int BACK   = 4;
final static int RIGHT  = 8;

int nbSteps; 
int[][][] rule;

/** init the rule array from a string defining a Langton's ant 
 * 
 *  You can use this method inside your init() method if you want 
 *  to test langton's ant instead of full turmites.
 */
void initLangton(String name) {
    int nbColors = name.length(); /* As many colors as letters in the ant's name */

    rule = new int[1][][]; /* one state only */
    rule[0] = new int[nbColors][]; /* As many colors as letters in the ant's name */
    for (int i=0; i<nbColors; i++) {
        rule[0][i] = new int[3]; /* every command set has 3 elements */ 

        rule[0][i][NEXT_COLOR] = (i+1) % nbColors;

        if (name.charAt(i) == 'L') {
            rule[0][i][NEXT_MOVE] = LEFT;            
        } else if (name.charAt(i) == 'R') {
            rule[0][i][NEXT_MOVE] = RIGHT;
        } else {
            getGame().getLogger().log("Unknown command in your ant's name: "+name.charAt(i));
        }

        rule[0][i][NEXT_STATE] = 0; /* only one state */

        
    }
}
void init() {
   Nbsteps = 8342;
   rule = new int[][][]{{{1, 'L', 0},{1, 'L', 1}},{0, 'N', 0},{0, 'N', 1}}
    
    /* Your code comes here. */

    /* Something like 
     *   nbSteps = 42;
     *   rule = new int[][][] {{{0, NOTURN, 0}, {0, NOTURN, 0}}}; 
     * but with possibly more states (ie, bigger second dimension), and more color (ie bigger third -- internal -- dimension) 
     * and naturally, less boring than this turmite doing absolutely nothing (runs forward endlessly).
     */

    /* It can also be something like
     *   nbSteps = 42;
     *   initLangton("RL");
     */

    /* remember to send your best creations for inclusion in the gallery */
}