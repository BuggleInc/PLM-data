public void run() {
	for(int x = 0, y = 3; x < y; x++){
		rowOfPatterns();
		if(x < 2){
			shiftBuggle();
		}else{
			resetBuggle();
		}
	}
}

void makePattern() {
int loops = 4;

	//this loop draws 4 V's
	for(int i = 0; i < loops; i++){
		if(i == 0) makeV(Color.yellow);
		if(i == 0) makeV(Color.red);
		if(i == 0) makeV(Color.blue);
		if(i == 0) makeV(Color.green);
	}
}//end method

void makeV(Color c){
int steps = 6;

		//this loop draws a V
		for(int x = 0; x <= steps; x++){
			
			if(x == 2 || x == 4 || x == 6){
				setBrushColor(c);
				brushDown();
				brushUp();
			}

			if(x == 4 || x == 5){
				left();
			}

			if(x < steps){
				forward();
			}
				
			if(x == 6){
				left();
				forward();
				left();
				forward();
				forward();
				forward();
				left();
			}
		}//end for
}// end makeV

void newStartPos(){
	//move buggle to new start position
	//to make a new pattern
	for(int j = 0; j < 7; j++){
		forward();
	}
}

//move buggle so it can start a new row
void shiftBuggle(){
	left();
	
		for(int i = 0; i < 7; i++){
			forward();
		}

		left();
		
		for(int y = 0; y < 14; y++){
			forward();
		}
		
	back();
}

//move buggle back to starting cell after drawing the last row
void resetBuggle(){
	back();
		
	for(int y = 0; y < 14; y++){
		forward();
	}

	left();

	for(int y = 0; y < 14; y++){
		forward();
	}

	left();
}

void rowOfPatterns(){
	makePattern();
	newStartPos();
	makePattern();
	newStartPos();
	makePattern();
}

