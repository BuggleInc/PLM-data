def solve() {
  var lastSorted = getStackSize();
  
  while (!isSorted()) {
    var largest = findLargest(lastSorted);
    flip(largest + 1);
    flip(lastSorted);
    lastSorted -= 1;
  }
  
  
}

def findLargest(depth:Integer) : Integer = {
  var max = getPancakeRadius(0);
  var maxI = 0;
  for (i <- 1 to (depth - 1)) {
    var currentSize = getPancakeRadius(i);
    
    if (currentSize > max) {
      max = currentSize;
      maxI = i
    }
  }
  
  return maxI;
}