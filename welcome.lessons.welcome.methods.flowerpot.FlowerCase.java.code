void growFlowers(){
	makeFlower(Color.RED);
	shiftRight1();
	makeFlower(Color.CYAN);
	shiftDown1();
	makeFlower(Color.GREEN);
	shiftCentral();
	makeFlower(Color.ORANGE);
	shiftDown2();
	makeFlower(Color.PINK);
	shiftRightUp();
	makeBlueFlower();
}//end run

void makeFlower(Color c){
int steps = 7;

	for(int i = 0; i <= steps; i++){
		if(i == 2 || i == 3 || i == 4){
			left();
		}
		if(i == 6 || i == 7){
			right();
		}
		if(i == 1){
			setBrushColor(Color.yellow);
			brushDown();
			brushUp();
		}else if(i == 0 || i == 2 || i == 4 || i == 6){
			setBrushColor(c);
			brushDown();
			brushUp();			
		}
		forward();
	}
	right();
}//end makeFlower

void makeBlueFlower(Color c){
int steps = 7;

	for(int i = 0; i <= steps; i++){
		if(i == 2 || i == 3 || i == 4){
			left();
		}
		if(i == 6 || i == 7){
			right();
		}
		if(i == 1){
			setBrushColor(Color.yellow);
			brushDown();
			brushUp();
		}else if(i == 0 || i == 2 || i == 4 || i == 6){
			setBrushColor(c);
			brushDown();
			brushUp();			
		}
		forward();
	}
	right();
}//end makeBlueflower

void shiftRight1(){
int steps = 4;

	//go right 4 steps
	for(int i = 0; i < steps; i++){
		forward();
	}
}//end shiftRight1

void shiftRightUp(){
int steps = 8;

	//go right 6 steps
	for(int i = 0; i < steps; i++){
		if(i == 6){
			left();
		}
		forward();
	}

	right();
}//end shiftRight2

void shiftDown1(){
int steps = 4;

	right();
	//go up 4 steps
	for(int i = 0; i < steps; i++){
		forward();
	}

	left();
}//end shiftDown

void shiftDown2(){
int steps = 4;

	right();
	//go down 2 steps
	for(int i = 0; i < steps; i++){
		if(i == 2){
			right();
		}
		forward();
	}

	back();
}//end shiftDown2

void shiftLeft(){
int steps = 4;
	//go left 4 steps
	back();
	
	for(int i = 0; i < steps; i++){
		forward();
	}

	back();
}//end shiftLeft

void shiftCentral(){
int steps = 4;

	left();
	//go up 2 steps then left 2 steps
	for(int i = 0; i < steps; i++){
		if(i == 2){
			left();
		}
		forward();
	}
	
	back();
}//end shiftCentral
