<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body><!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Cyclic Towers of Hanoi</h2>

<p>This variation is very similar to the regular problem: you are given one stack of disks and three pegs.
The change is that you can only move disks clockwise: 0->1 or 1->2 or 2->0, but never in the other direction. 
As usual, you cannot move a larger disk over a smaller one.</p>

<p>Obviously, the movements are not symmetric anymore. Moves from A to B are now very different from moves to B to A.
As a result, you need two recursive functions depending on whether you are moving the stack clockwise or counterclockwise.
The problem decomposition is very similar to the classical Hanoi, but the funny thing is that each function call the other one, 
constituting a nice example of mutual recursion.</p>
</body></html>