    def dragon(order:Int, x:Double, y:Double, z:Double, t:Double) {
    	val u=(x + z)/2+(t - y)/2
	val v= (y + t)/2-(z - x)/2
	order match {
		case 1 => {
			setPos(x,y)
			allerVers(z,t)
		}
		case _ => {
			dragon(order-1,x,y,u,v)
			dragon(order-1,z,t,u,v)
		} 	
	}
}



    def dragonInverse(order:Int, x:Double, y:Double, z:Double, t:Double) {

   	val u=(x + z)/2+(t - y)/2
	val v= (y + t)/2-(z - x)/2
	order match {
		case 1 => {
			setPos(x,y)
			allerVers(z,t)
		}
		case _ => {
			dragon(order-1,x,y,u,v)
			dragon(order-1,z,t,u,v)
		} 	
	}

 }
