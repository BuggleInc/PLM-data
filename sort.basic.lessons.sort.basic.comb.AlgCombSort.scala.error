AlgCombSort:9: error: type mismatch;
 found   : Int
 required: ?{def /(x$1: ? >: Double(1.3)): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def /(x$1: ? >: Double(1.3)): ?}
      lng = lng / 1.3;
            ^AlgCombSort:9: error: overloaded method value / with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
      lng = lng / 1.3;
                ^AlgCombSort:11: error: not found: value i
    i = 0;
    ^AlgCombSort:12: error: not found: value i
    while(i+lng < lng){
          ^AlgCombSort:13: error: not found: value i
      if(getValue(i+lng) < getValue(i)){
                  ^AlgCombSort:13: error: not found: value i
      if(getValue(i+lng) < getValue(i)){
                                    ^AlgCombSort:14: error: not found: value i
        swap(i, i+lng);
             ^AlgCombSort:14: error: not found: value i
        swap(i, i+lng);
                ^AlgCombSort:16: error: not found: value i
      i += 1;
      ^