def checkMur():Boolean = {
  gauche()
  if (estFaceMur()){
    droite()
    return true
  }
  droite()
  return false
}

def keepHandOnSideWall(a:Int):Int = {
  var sommeAngle:Int = a
  if(!estFaceMur()){
    avance()
  } else{
    droite()
    if(estFaceMur()){
      gauche();gauche()
      if(estFaceMur()){
        gauche()
        avance()
      } else {avance()}
    } else {avance()}
  }
  return sommeAngle
}

def estSurMurNord():Boolean = {
  return getY() == 0
}

def eviteObstacle(){
  var sommeAngle:Int = 0
  do{
  	sommeAngle = keepHandOnSideWall(sommeAngle)
  }while (sommeAngle != 0 && isDirectionFree(Direction.NORTH))
}

def isDirectionFree(dir:Direction):Boolean = {
  var direct:Direction = getDirection()
  setDirection(dir)
  if (estFaceMur()){
    setDirection(direct)
    return true
  }
  setDirection(direct)
  return false
}

override def run() {
  while (!estSurBiscuit()){
    eviteObstacle()
  }
  prendBiscuit()
}