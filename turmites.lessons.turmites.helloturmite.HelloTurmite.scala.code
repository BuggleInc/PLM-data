var state = 0;

def step(colors:Array[Color], rule:Array[Array[Array[Int]]] ) {

	var c = 0
	c = 0

	while (c < colors.length)
	{
		if (colors(c) == getCouleurSol())
		{
			
			testColor(state, c, colors, rule)
			testMVT(state, c, rule)
			state = testState(state, c, rule)
			c = colors.length
		}

		c = c + 1
	}

        
}

def testMVT(state:Int, c:Int, rule:Array[Array[Array[Int]]] )
{
	rule(state)(c)(1) match 
	{
		case 0 =>
		case 1 => avance; 
		case 2 => gauche; avance;
		case 4 => droite; droite; avance;
		case 8 => droite; avance;
	}
}

def testColor (state:Int, c:Int,colors:Array[Color], rule:Array[Array[Array[Int]]])
{
	var r = 0
	r = rule(state)(c)(0)
	setCouleurSol(colors(c))
}

def testState (state:Int, c:Int, rule:Array[Array[Array[Int]]] ):Int =
{
	var r = 0
	r = rule(state)(c)(2)
	return r 
}

def setCouleurSol(couleur:Color)
{
	setCouleurBrosse(couleur)
	baisseBrosse()
	leveBrosse()
	
}
