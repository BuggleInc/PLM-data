override def run() {
  
  var width:Int = getWorldWidth()
  var height:Int = getWorldHeight()
  var x:Int=0
  var y:Int=0
  var i:Int=0
  
  def min(a:Int,b:Int):Int ={
    if (a<=b) {return a}
    return b
  }
  
  while (! hasBaggle(x,y)) {
    if (x<width-1) {
    	x+=1
    } else {
      y+=1
      x=0
    }
  }    
  setIndication(x,y,i)
  
  def nexts(i:Int):Vector ={
    var next:List[Tuple2[Int,Int]] = Nil
    for (x<-0 to width-1 ) {
      for (y <- 0 to height-1) {
        if (getIndication(x,y)==i) {
          if (! hasTopWall(x,y)) {
            yield (x,y-1)
          }
           if (! hasLeftWall(x,y)) {
             yield (x-1,y)
           }
          if (!(x==width-1 || hasLeftWall(x+1,y))) {
            yield (x+1,y)
          }
          if (!(y==height-1 || hasTopWall(x,y+1))) {
          	yield (x,y+1)
          }
        }
  		}
    }
    return next
  }
  var nextCase:Vector=Nil
  while (getIndication(getX(),getY())==9999) {
    
    nextCase=nexts(i)
    setIndication(0,0,i)
    for ((a,b) <- nextCase) {
      
      setIndication(a,b,i)
    }
    i+=1
  }
}