def hanoi(height:Int, src:Int, other:Int, dst:Int) {
 
  height match {
    
    case 1 => { move(src, dst) }
    
    case n => {
      hanoi(n - 1, src, dst, other)
      move(src, dst)
      hanoi(n - 1, other, src, dst)
    }
  } 
}

def splitHanoi(height:Int, src:Int, other:Int, dst1:Int, dst2:Int) {
  
  height match {
    
    case 0 => {()}
    
    case n => {
      splitHanoi((n - 1), src, dst2, dst1, other)
      move(src, dst2)
      hanoi((n - 1), dst1, src, dst2)
      move(src, dst1)
      hanoi((n - 1), other, src, dst1)
    }
  }
  }