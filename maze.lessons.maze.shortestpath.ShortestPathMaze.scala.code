// On détermine la position de la sortie.
def trouveSortie(): Array[Int] = {
  for (x <- 0 to getMondeLargeur() - 1) {
    for (y <- 0 to getMondeHauteur() - 1) {
      if (aBiscuit(x, y))
      	return Array[Int](x, y)
    }
  }
  
  return Array[Int](2)
}

def marqueCases(x: Int, y: Int, poids: Int) {
  var xMax:Int = getMondeLargeur() - 1
  var yMax:Int = getMondeHauteur() - 1
  
  // A gauche...
  if (x > 0 && !aMurOuest(x, y) && poids < getIndication(x - 1, y))
  	setIndication(x - 1, y, poids)
  
  // A droite...
  if (x < xMax && !aMurOuest(x + 1, y) && poids < getIndication(x + 1, y))
  	setIndication(x + 1, y, poids)
  
  // En haut...
  if (y > 0 && !aMurNord(x, y) && poids < getIndication(x, y - 1))
  	setIndication(x, y - 1, poids)
  
  // En bas...
  if (y < yMax && !aMurNord(x, y + 1) && poids < getIndication(x, y + 1))
  	setIndication(x, y + 1, poids)
  
  // Récursivons...
  if (x > 0 && getIndication(x - 1, y) == poids)
  	marqueCases(x - 1, y, poids + 1)
  
  if (x < xMax && getIndication(x + 1, y) == poids)
  	marqueCases(x + 1, y, poids + 1)
  
  if (y > 0 && getIndication(x, y - 1) == poids)
  	marqueCases(x, y - 1, poids + 1)
  
  if (y < yMax && getIndication(x, y + 1) == poids)
  	marqueCases(x, y + 1, poids + 1)
}

def trouveLaPutainDeSortie() {
  var x:Int = getX()
  var y:Int = getY()
  
  var xMax:Int = getMondeLargeur() - 1
  var yMax:Int = getMondeHauteur() - 1
  
  while (!estSurBiscuit()) {
    // A gauche
    if (x > 0 && getIndication(x - 1, y) < getIndication(x, y))
      gauche(); avance(); droite()

    // A droite
    if (x < xMax && getIndication(x + 1, y) < getIndication(x, y))
    	droite(); avance(); gauche()
    
    // En haut
    if (y > 0 && getIndication(x, y - 1) < getIndication(x, y))
    	avance()
    
    // En bas
    if (y < yMax && getIndication(x, y + 1) < getIndication(x, y))
    	retourne(); avance(); retourne()
  }
}

override def run() {
  var laSortie:Array[Int] = trouveSortie()
  
  // On écrit 0 sur la case de la sortie. :D
  setIndication(laSortie(0), laSortie(1), 0)
  
  marqueCases(laSortie(0), laSortie(1), 1)
}