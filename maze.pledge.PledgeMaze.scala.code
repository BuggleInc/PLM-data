var virages = 0

def libreAuNord():Boolean = {
  
  var dirInit = getDirection()
  var res = false
  setDirection(Direction.NORD)
  res = estFaceMur()
  setDirection(dirInit)
  return res
  
}

def murAGauche():Boolean = {
  
  var res = false
  gauche()
  res = estFaceMur()
  droite()
  return res 
  
}


def longerMurGauche() {
  
  if (murAGauche()) {
    
    if (estFaceMur()) {
      
      droite()
      virages = virages - 1
      return
    
    } else {
      
      avance()
      
    }
    
  } else {
      
    	gauche()
    	virages = virages + 1
      avance()
    
  }
  
}

def avanceWllh() {
	
  setDirection(Direction.NORD)
  while (!estFaceMur()) {avance()}
  droite()
  virages = 0
  while (virages != 0 && !libreAuNord()) {
    
    longerMurGauche()
    
  }
  
}


override def run() {
  
  setDirection(Direction.NORD)
  
  while (!estSurBiscuit()) {
    
    avanceWllh()
    
  }
  
  prendBiscuit()
  
}