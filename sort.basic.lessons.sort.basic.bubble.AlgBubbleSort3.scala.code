def bubbleSort3() 
{
var 




}

















 /*
  * def bubbleSort2()
{
	var n=getNombreValeurs()
	var inverse=true


	inverse=false	

		for(i<-n-2 to 0)
		{
			for(j<-0 to i)
			{
				if(plusPetit(j+1,j))
				{
				echange(j,j+1)
				inverse=true
				}
					
			}
		
		}

	
	
}




/*
 * def bubbleSort()  
{
var n=getNombreValeurs() 
var inverse=true
do
	{	
		inverse=false
		
		for (i<-0 to n-2)
		{	
			if (plusPetit(i+1,i))
			{
			echange(i,i+1)
			inverse=true
			}
		}


	} while(inverse)

}




*/
 
  /*def combSort()
/*ecart = lgr;
 faire 
   si ecart>1 alors
     ecart = ecart / 1.3
   i = O
   tant que i+ecart < lgr faire:
     si i et i+ecart doivent être inversés, le faire
     incrémenter i de 1
 tant que l'écart est plus grand que 1 ou que le dernier parcours a inversé au moins un élément
*/
/*
{

ecart=getNombreValeurs()
ecart = (ecart.toDouble / 1.3).toInt
var i=0
var inverse=true

	do
	{
		inverse=false
		if(ecart>1)
		{
		ecart=ecart/1.3
		} 
			var i=0
			while(i+ecart<getNombreValeurs())
			{
				if(plusPetit(i+1,i))
				{
				echange(i,i+1)
				inverse = true
				}
			i=i+1
			}

		
	}while(ecart>1 || inverse=true)

}
















*/




  