override def run() {
  
    def keepRightHand(t:Int):Int ={
      var turn:Int=t
      right()
      turn=turn-1
      if (! isFacingWall()) {
        forward() ; return turn
        } else {
    					left()
        			turn=turn+1
    					if (! isFacingWall()) {
                forward ; return turn
              } else {
                	left()
                turn=turn + 1
                	if (! isFacingWall()) {
                  	forward ; return turn
                	} else {
                  left() ;forward()
                    turn= turn + 1 ; return turn
                }
              }
            }
			}
  
  	def dirFree(d:Direction):Boolean  = { 
      var dir:Direction = getDirection()
    	setDirection(d)
      if (isFacingWall) {
        setDirection(dir)
        return false
      } else {
        setDirection(dir)
        return true
      }
    }
  
  var turn:Int=0
  setDirection(Direction.NORTH)
   while (!isOverBaggle()) {
   	turn=0
    while (! isFacingWall() && !isOverBaggle())
      setDirection(Direction.NORTH)
      forward()
    }
     if (isOverBaggle()) {return}
     left()
     turn=1
     while ((turn!=0 || ! dirFree(Direction.NORTH) ) && !isOverBaggle()) {
     turn= keepRightHand(turn)
    }
    
    
   }
  pickupBaggle()
}
