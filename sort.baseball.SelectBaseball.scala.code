override def run()
{
  var nbBases = getNombreBases();
  var nbPos = getNombrePositions();
  var posJoueur = 0;
  var baseJoueur = 0;
  
  for (nCouleur <- 0 to 0) //On trie chacune des bases (=couleurs)
  {
    for (nBase <- 0 to nbBases-1)
    {
      if (nBase != nCouleur) //On ne regarde pas la base en cours de tri
      {
        for (nPos <- 0 to nbPos-1)
        {
          if (getCouleurJoueur(nBase, nPos) == nCouleur) //On a trouve un joueur de la bonne couleur
          {
            deplacerTrou((nBase+1)%nbBases, 1);
            deplace(nBase, nPos);
            //deplacerJoueur(k, nCouleur, 1);
          }
        }
      }
  	}
  }
}


def deplacerTrou(arrive:Int, sens:Int) //sens:-1 ou 1
{
  if (arrive == getTrouBase()) return;
  
  var nbBases = getNombreBases();
  var nbPos = getNombrePositions();
  var currBase = (getTrouBase()+sens)%nbBases;
  
  var pos = cherchePasJoueur(arrive, currBase);
  
  if (pos != -1)
  {
    deplace(currBase, pos);
    deplacerTrou(arrive, sens);
  }
  //else if (sens == 1) deplacerTrou(arrive, -sens);
  //else return;
}

def deplacerJoueur(pos:Int, arrive:Int, sens:Int)
{
  //requis: le trou se trouve à côté de la base du joueur
  var nbBases = getNombreBases();
  var currTrou = getTrouBase(); //base où se trouve le trou
  var currBase = (getTrouBase()-sens)%nbBases; //base où se trouve le joueur
  
  if (arrive == currTrou)
  {
    deplace(currBase, pos);
  }
  else
  {
    deplace(currBase, pos);
    //currTrou et currBase sont maintenant inverses
    
    deplace(currBase, cherchePasJoueur(arrive, currTrou));
    deplacerJoueur(chercheJoueur(arrive, currTrou), arrive, sens)
  }
}
  
def chercheJoueur(couleur:Int, base:Int):Int =
{
  var nbPos = getNombrePositions();
  
  for (i <- 0 to nbPos-1)
  {
    if (getCouleurJoueur(base, i) == couleur) return i;
  }
  return -1;
}

def cherchePasJoueur(couleur:Int, base:Int):Int =
{
  var nbPos = getNombrePositions();
  
  for (i <- 0 to nbPos-1)
  {
    if (getCouleurJoueur(base, i) != couleur) return i;
  }
  return -1;
}