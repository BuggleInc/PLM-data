<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Monde de serpents</h2>

<p>Nous allons maintenant apprendre ¨¤ la buggle ¨¤ explorer son monde. Sa
position de d¨¦part est en bas ¨¤ gauche, et elle doit visiter toutes les
cases jusqu'en haut (en coloriant le sol sur son passage).  La boucle
principale de votre code doit ¨ºtre de la forme :</p>
<pre>
 baisser le crayon
 tant que l'on est pas ¨¤ la position finale
   avancer comme un serpent
</pre>

<p>Il faut donc ¨¦crire deux m¨¦thodes sp¨¦cifiques. L'une renvoie un bool¨¦en
indiquant si l'on se trouve ¨¤ la position finale, tandis que l'autre avance
d'un pas de serpent.</p>

<p>On se trouve sur une position finale si et seulement si les deux conditions
suivantes sont vraies.:</p>
<ul>
  <li>On est face ¨¤ un mur</li>
  <li>Il y a un mur au nord de la buggle. Donc, si la buggle regarde ¨¤ l'est, il
faut v¨¦rifier s'il y a un mur ¨¤ gauche, et si la buggle regarde ¨¤ l'ouest,
il faut v¨¦rifier s'il y a un mur ¨¤ droite.<br/>
      On obtient la direction actuelle de la buggle avec la m¨¦thode
<code>getDirection()</code>, et on sait si elle regarde ¨¤ l'est avec le test
<code>getDirection() == Direction.EST</code> (ou
bien OUEST).<br/>
      Pour la v¨¦rification elle-m¨ºme, rien de magique : il faut se tourner et
regarder si on est face ¨¤ un mur une fois tourn¨¦.</li>
</ul>

<p>Ensuite un pas de serpent se fait en avan?ant d'un pas si l'on est pas face
¨¤ un mur, et en montant ¨¤ la ligne du dessus sinon (dit autrement, si on
regarde ¨¤ l'ouest face ¨¤ un mur, il faut tourner ¨¤ droite, avancer, tourner
¨¤ droite).</p>

<p>Indication: la boucle principale de votre code doit continuer tant que la
fonction ad¨¦quate renvoie faux. On peut l'¨¦crire de deux fa?ons:</p>
<pre>while (fonctionTest() == false) {</pre>
<p>
Comme le point d'exclamation (!) d¨¦note la n¨¦gation bool¨¦enne
en Java, vous pouvez aussi l'¨¦crire:</p>
<pre>while (!fonctionTest()) {</pre>

<p>? vous de jouer...</p>

</body></html>