override def run() {
  var xMax:Int = getWorldWidth();
  var yMax:Int = getWorldHeight();

	var x:Int = findBaggle(xMax,yMax)._1;
	var y:Int = findBaggle(xMax,yMax)._2;  
  var num = 0;
  
  while(true) {
    numerote(x,y,num,xMax,yMax)
  }
}


def findBaggle(xMax:Int, yMax:Int): (Int,Int) = {
  var i:Int =0;
  var j:Int =0;
  while (!hasBaggle(i,j)){
    if (i==xMax-1) {
      i = 0;
      j += 1
    }
    else {
      i += 1
    }
  }
  return (i,j)
  
}

def listVoisins(x:Int,y:Int, xMax:Int, yMax:Int, num:Int):List(int,int)= {
  var voisins:List(int,int) = Nil;
  
  if (y!= yMax-1 && !hasTopWall(x,y) && getIndication(x,y-1)>num) { 
  	voisins = (x,y-1)::voisins
  }
  if (x!= 0 && !hasLeftWall(x,y) && getIndication(x-1,y)>num) {
  	voisins = (x-1,y)::voisins
  }
  
  if (x!= xMax-1 && !hasLeftWall(x+1,y) && getIndication(x+1,y)>num) {
  	voisins = (x+1,y)::voisins
  }
  
  if (y!= 0 && !hasTopWall(x,y+1) && getIndication(x,y+1)>num) {
  	voisins = (x,y+1)::voisins
  }
  return voisins
  
  
}
def numerote(x:Int,y:Int,num:Int, xMax:Int, yMax:Int) {
  val listV = listVoisins(x,y,xMax,yMax,num:Int);
  while (!listV.isEmpty) {
    setIndication()
  }
  
  
}  