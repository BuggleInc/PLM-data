AlgCombSort:5: error: missing arguments for method || in class Boolean;
follow this method with `_' if you want to treat it as a partially applied function
 while (ecart>1 || ) 
                ^AlgCombSort:8: error: type mismatch;
 found   : Int
 required: ?{def /(x$1: ? >: Double(1.3)): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def /(x$1: ? >: Double(1.3)): ?}
     ecart = ecart / 1.3
             ^AlgCombSort:8: error: overloaded method value / with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
     ecart = ecart / 1.3
                   ^AlgCombSort:9: error: not found: value i
   i = O
   ^AlgCombSort:12: error: not found: value i
     if (plusPetit(i+1:Int, i:Int))
                   ^AlgCombSort:14: error: not found: value i
     	echange(i,i+1)
                ^AlgCombSort:16: error: not found: value i
     i=i+1
     ^AlgCombSort:18: error: not found: value i
  while( i+ecart < lgr)
         ^