Escaper:83: error: not found: value hasBaggle
      if (hasBaggle(x,y)){
          ^Escaper:95: error: not found: value getIndication
  var next = getIndication(xBug,yBug)
             ^Escaper:113: error: not found: value getIndication
  var caseBuggle = getIndication(xBuggle,yBuggle)
                   ^Escaper:118: error: not found: value getIndication
    if (xBuggle + 1 < L){cases(0)  = getIndication(xBuggle + 1,yBuggle)}//Droite
                                     ^Escaper:119: error: not found: value getIndication
    if (xBuggle - 1 >= 0){cases(1) = getIndication(xBuggle - 1,yBuggle)}//Gauche
                                     ^Escaper:120: error: not found: value getIndication
    if (yBuggle + 1 < H){cases(2)  = getIndication(xBuggle,yBuggle + 1)}//Bas
                                     ^Escaper:121: error: not found: value getIndication
    if (yBuggle - 1 >= 0){cases(3) = getIndication(xBuggle,yBuggle - 1)}//Haut
                                     ^Escaper:154: error: not found: value setIndication
    setIndication(x,y,i)
    ^Escaper:164: error: not found: value getIndication
          if (i<getIndication(x+1,y)) {
                ^Escaper:165: error: not found: value setIndication
            setIndication(x+1,y,i)
            ^Escaper:170: error: not found: value getIndication
          if (i<getIndication(x-1,y)) {
                ^Escaper:171: error: not found: value setIndication
            setIndication(x-1,y,i)
            ^Escaper:177: error: not found: value getIndication
          if (i<getIndication(x,y+1)) {
                ^Escaper:178: error: not found: value setIndication
            setIndication(x,y+1,i)
            ^Escaper:183: error: not found: value getIndication
          if (i<getIndication(x,y-1)) {
                ^Escaper:184: error: not found: value setIndication
            setIndication(x,y-1,i)
            ^Escaper:202: error: not found: value hasLeftWall
    case DROITE => if (x+1 >= getWorldWidth()){return false}else if (hasLeftWall(x+1,y)){return false};
                                                                     ^Escaper:203: error: not found: value hasLeftWall
    case GAUCHE => if (hasLeftWall(x,y)){return false};
                       ^Escaper:204: error: not found: value hasTopWall
    case BAS =>if (y+1 >= getWorldHeight()){return false}else if (hasTopWall(x,y+1)){return false};
                                                                  ^Escaper:205: error: not found: value hasTopWall
    case HAUT => if (hasTopWall(x,y)){return false};
                     ^