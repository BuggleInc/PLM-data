Compilation error:
AlgCombSort:5: error: type mismatch;
 found   : Double
 required: Float
      ecart = ecart/1.3
                   ^AlgCombSort:12: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Float): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Float): ?}
      if (plusPetit(i+ecart,i)==true){
                    ^AlgCombSort:12: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Float)
      if (plusPetit(i+ecart,i)==true){
                     ^AlgCombSort:13: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Float): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Float): ?}
        echange(i,i+ecart)
                  ^AlgCombSort:13: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Float)
        echange(i,i+ecart)
                   ^