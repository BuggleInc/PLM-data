override def run() {
  
  while(!isOverBaggle()){
    //On se colle Ã  un obstacle si on n'en a pas
    if (!checkGauche())
    	colleObstacle()
    
    //Tant que on ne tourne pas en rond on fait le tour en gardant une main dessus
    var troisSix = 0
    do {
    	troisSix = troisSix + keepHandOnSideWall()
    }while (!isOverBaggle() && troisSix != 0)
    
    //Si on tourne en rond on continue jusqu'a ce qu'on puisse sortir
    while (!isDirectionFree(Direction.EAST) && !isOverBaggle()){
      keepHandOnSideWall()
    }
    setDirection(Direction.EAST)
    colleObstacle()
  }
  pickupBaggle()
}

//1
def keepHandOnSideWall(): Int = {
    
  var angleAbs = 0
  
  //S'il y a un mur en face on tourne a droite
  if (isFacingWall()){
    right()
    angleAbs = angleAbs +1
  
  //Sinon on peut avancer et regarder s'il y a un mur
  }else{
    forward()
    left()
    angleAbs = angleAbs -1
    
    //Si il y a un mur on se remet droit pour le prochain
    if (isFacingWall()){
      right()
      angleAbs = angleAbs +1
      
    }
  }
  return angleAbs
}


//2
def checkGauche():Boolean ={
  /*Regarde s'il y a un mur a gauche, si oui renvoie true */
  left()
  var resultat = isFacingWall()
  right()
  return resultat
}

//3
def isDirectionFree( dir: Direction ):Boolean ={
  var memDir = getDirection()
  setDirection(dir)
  var res = isFacingWall()
  setDirection(memDir)
  return !res
}

//4
def colleObstacle(){
  while(!isFacingWall() && !isOverBaggle()){
    forward()
  }
  right()
}