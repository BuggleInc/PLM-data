override def run() {
	var x=0
	var y=0
	while (!aBiscuit(x,y)) {
		if (x<getMondeLargeur()-1) {
			x+=1
		} else {
			x=0
			y+=1
		}
	}
	setIndication(x,y,0)
	expandPath(x,y)
	while (!estSurBiscuit) {
		furtherPath()
	}
	prendBiscuit()
}
def expandPath(x:Int,y:Int) {
	var i = getIndication(x,y)
	if (y!=0) {
		if (!aMurNord(x,y)) {
			if (getIndication(x,y-1)>=i) {
				setIndication(x,y-1,i+1)
				expandPath(x,y-1)
			}
		}
	}
	if (y!=getMondeHauteur()-1) {
		if (!aMurNord(x,y+1)) {
			if (getIndication(x,y+1)>=i) {
				setIndication(x,y+1,i+1)
				expandPath(x,y+1)
			}
		}
	}
	if (x!=0) {
		if (!aMurOuest(x,y)) {
			if (getIndication(x-1,y)>=i) {
				setIndication(x-1,y,i+1)
				expandPath(x-1,y)
			}
		}
	}
	if (x!=getMondeLargeur()-1) {
		if (!aMurOuest(x+1,y)) {
			if (getIndication(x+1,y)>=i) {
				setIndication(x+1,y,i+1)
				expandPath(x+1,y)
			}
		}
	}	
}
def furtherPath() {
	var x=getX
	var y=getY
	var i:Int=0
	var j:Int=0
	var sol=getIndication(x,y)
	for (d<- 1 to 4) {
		x=getX
		y=getY
		i=0
		j=0
		sol=getIndication(x,y)
		getDirection() match {
			case Direction.NORD => i=1;j=0
			case Direction.SUD => i=1;j=2
			case Direction.EST=> i=2;j=1
			case Direction.OUEST => i=0;j=1		}
		if (!estSurBiscuit) {
			if (!estFaceMur) {
				if (getIndication(x-1+i,y-1+j)<sol) {
					avance()
				} else {
					gauche()
				}
			} else {	
				gauche()
			}
		}
	}
}
	