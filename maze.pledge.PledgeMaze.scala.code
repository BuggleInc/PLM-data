var virages = 0
var init = false

def murAGauche():Boolean = {
  
  var res = false
  gauche()
  res = estFaceMur()
  droite()
  return res 
  
}

def libreAuNord():Boolean = {
  
  var dirInit = getDirection()
  var res = false
  setDirection(Direction.NORD)
  res = estFaceMur()
  setDirection(dirInit)
  return res
  
}

def fonceAuNord() {
  
  setDirection(Direction.NORD)
  while (!estFaceMur()) {avance()}
  
}


def longerMurGauche() {
  
  if (murAGauche()) {
    
    if (estFaceMur()) {
      
      droite(); virages = virages - 1; init = true
      return
    
    } else {
      
      avance()
      return
      
    }
    
  } else {
      
    	gauche();virages = virages + 1; init = true
      avance()
    	return
    
  }
  
}


override def run() {
  
  setDirection(Direction.NORD)
  
  while (!estSurBiscuit()) {
    
    fonceAuNord()
    droite()
    do {
      
      longerMurGauche()
      
    } while (!init||virages !=0 && !libreAuNord())
    
  }
  
  prendBiscuit()
  
}