<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body><!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>While loops</h2>
		
<p>In addition to conditionals, another handy construction is the ability to
repeat an action while a specific condition does not appear. A while loop is
used for that, with the following syntax.</p>
 
<pre>while <b>condition</b>:
&nbsp;&nbsp;&nbsp;&nbsp;<b>action()</b></pre>

<p>The inner bloc is then executed again and again, as long as the condition remains true. 
More specifically, the buggle tests the value of the condition. If it's false, it ignores the bloc and continue below. 
If it's true, it executes the bloc.
After that, it tests the condition. If it's now false 
(for example because the moves of the block made us facing the wall), it now ignores the bloc and continue.
If it's still true, it execute the bloc and reevaluate the condition. It does so as long as the condition remains true.</p>

<p>Naturally, if the chosen action does not modify the value of the condition,
the buggle will do the action endlessly. The <b>stop</b> button of the
interface becomes then handy. To test this, you can try to type the
following code in the editor:</p>

<pre>while True:
&nbsp;&nbsp;&nbsp;&nbsp;left()</pre>

<p>This will let the buggle turn left as long as <code>True</code> remains true (ie, endlessly),
or until you stop it manually using the stop button.</p>

<h3>Exercise goal</h3>
You now have to write some code so that your buggles move forward
until they encounter a wall. The idea is thus to do something like:

<pre>while we are not facing a wall, do:
&nbsp;&nbsp;moveForward()</pre>

<p>When your program works, move forward to the next exercise.</p>
</body></html>