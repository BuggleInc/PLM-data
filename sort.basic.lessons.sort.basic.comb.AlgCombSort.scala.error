AlgCombSort:8: error: type mismatch;
 found   : Long
 required: ?{def /(x$1: ? >: Double(1.3)): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method long2float in object Long of type (x: Long)Float
 and method long2double in object Long of type (x: Long)Double
 are possible conversion functions from Long to ?{def /(x$1: ? >: Double(1.3)): ?}
      ecart=ecart/1.3
            ^AlgCombSort:8: error: overloaded method value / with alternatives:
  (x: Long)Long <and>
  (x: Int)Long <and>
  (x: Char)Long <and>
  (x: Short)Long <and>
  (x: Byte)Long
 cannot be applied to (Double)
      ecart=ecart/1.3
                 ^AlgCombSort:12: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Long): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Long): ?}
      if(plusPetit(i,i+ecart)){
                     ^AlgCombSort:12: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Long)
      if(plusPetit(i,i+ecart)){
                      ^AlgCombSort:13: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Long): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Long): ?}
        echange(i, i+ecart)
                   ^AlgCombSort:13: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Long)
        echange(i, i+ecart)
                    ^