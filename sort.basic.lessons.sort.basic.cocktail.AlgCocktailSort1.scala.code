def cocktailSort() {

tant qu'au moins l'un des parcours a inversé un élément
	for ( i<-lrg-2 to 0 by -1)
		{
			if(hasSwap==true)
			{
				hasSwap=false;
				for (j <-0 to i)
				{
					if( plusPetit(j+1, j))
					{
						echange(j,j+1);
						hasSwap = true
					}
				}
			}
		}
		val hasSwap=true;
	for (i<- 0, getNombreValeurs()-2)
	{
		if(hasSwap==true)
		{
			hasSwap=false;
			if( plusPetit(i+1,i)
			{
				echange(i,i+1);
				hasSwap=true;
			}
		}
	}
	for (i<- getNombreValeurs()-2 to 0 by -1)
	{
		if(hasSwap==true)
		{
			hasSwap=false;
			if(plusPetit(i+1,i)
			{
				echange(i,i+1);
				hasSwap=true;
			}
		}
	}
	
}
