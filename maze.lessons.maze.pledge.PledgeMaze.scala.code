override def run() {
  var sommeAngle=0
  do { var sommeAngle:Int = keepHandOnSideWall(sommeAngle)
     }
    while (sommeAngle !=0) 
 
  while(!estSurBiscuit()) {
    keepHandOnSideWall(sommeAngle)
  }
  prendBiscuit()
}

def keepHandOnSideWall(sa:Int) :Int= {
  var sommeAngle=sa
  gauche()
  sommeAngle = sommeAngle +1
  while (estFaceMur()) {
    droite()
    sommeAngle = sommeAngle -1
  }
  avance()
  return sommeAngle
  
}

def nord() {
  if (!estFaceMur()) avance()
  else {
    droite()
    if (!estFaceMur()) {
      avance()
      gauche()
    }
  }
}

/*def isDirectionFree (dir) :Boolean = {
  var d = false
  var dirAct = getDirection()
  setDirection(dir)
  if (!estFaceMur()) d =true
  setDirection(dirAct)
  return d
}*/