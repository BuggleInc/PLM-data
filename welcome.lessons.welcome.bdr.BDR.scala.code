while (estSurMessage():Boolean:) {
	if (litMessage()=="R") {
		droite();avance();
	}
	if (litMessage()=="L") {
		gauche();avance();
	}
	if (litMessage()=="I" {
		gauche();gauche();avance();
	}
	if (litMessage()=="A") {
		avance();
	}
	if (litMessage()=="B") {
		avance();avance();
	}
	if (litMessage()=="C") {
		avance();avance();avance();
	}
	if (litMessage()=="Z") {
		recule();
	}
	if (litMessage()=="Y") {
		recule();recule();
	}
	if (litMessage()=="X") {
		recule();recule();recule();
	}
}




/*estSurMessage():Boolean: renvoie true si et seulement s'il y a un message écrit par terre.
litMessage(): String : renvoie le message qu'il y a écrit par terre (s'il y a rien, on obtient une chaîne vide).
ecritMessage(msg: String) : écrit le message spécifié en argument par terre. S'il y a déjà quelque chose écrit par terre, on ajoute le nouveau message à la fin du précédent.
clearMessage() : efface ce qui est écrit par terre.
Objectif de cet exercice
L'objectif est donc d'organiser une partie de BDR entre les buggles en leur apprenant à bouger en fonction des indications écrites par terre. Ces indications sont des messages au sol, avec le code suivant: 
Indication
Quoi faire
Mnémotechnique
"R"
Tourner à droite et avancer d'une case
Right (signifie «droite» en anglais)
"L"
Tourner à gauche et avancer d'une case
Left (signifie «gauche» en anglais)
"I"
Se retourner (demi-tour) et avancer d'une case
Inverse
"A"
Avancer d'une case
Première lettre de l'alphabet
"B"
Avancer de deux cases
Deuxième lettre de l'alphabet
"C"
Avancer de trois cases
Troisième lettre de l'alphabet
"Z"
Reculer d'une case
A une lettre de la fin de l'alphabet
"Y"
Reculer de deux cases
A deux lettres de la fin de l'alphabet
"X"
Reculer de trois cases
A trois lettres de la fin de l'alphabet
(n'importe quoi d'autre)
Arrêter de danser.*/	if (litMessage(): String :=L) {
		gauche();avance();
	}
	if (litMessage(): String :=I {
		gauche();gauche();avance();
	}
	if (litMessage(): String :=A) {
		avance();
	}
	if (litMessage(): String :=B) {
		avance();avance();
	}
	if (litMessage(): String :=C) {
		avance();avance();avance();
	}
	if (litMessage(): String :=Z) {
		recule();
	}
	if (litMessage(): String :=Y) {
		recule();recule();
	}
	if (litMessage(): String :=X) {
		recule();recule();recule();
	}
}