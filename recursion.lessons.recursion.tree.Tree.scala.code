<<<<<<< HEAD
def tree(steps:Int, length:Double, angle:Double, shrink:Double)    {
	if (steps==0) return
	else {
		current(steps)
		avance(length)
		droite(angle)
		tree(steps-1,length*shrink,angle,shrink)
		gauche(2*angle)
		tree(steps-1,length*shrink,angle,shrink)
		current(steps)
		droite(angle)
		recule(length)
		
	}
	//Pour dessiner un arbre à quatre étages, il faut dessiner un tronc de la taille indiquée,
	//tourner à droite de l'angle indiqué,
	//faire un arbre à 3 étages,
	//tourner à gauche de deux fois l'angle indiqué,
	//faire un autre arbre à 3 étages,
	//puis revenir à sa position initiale.
}
=======
def tree(steps:Int, length:Double, angle:Double, shrink:Double)    {
	if (steps>0) {
		current(steps);
		baisseCrayon();
		avance(length);
		leveCrayon();
		
		droite(angle);
		tree(steps-1, length*shrink, angle, shrink);
		gauche(2*angle);
		tree(steps-1, length*shrink, angle, shrink);
		droite(angle);
		recule(length);
	}
}
>>>>>>> refs/remotes/origin/PLMb08ec186b1914e03e4bcaec7e8fa4fbcab29c7cd
