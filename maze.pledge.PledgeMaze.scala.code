override def run() {
  findNorthWall()
  while(!estSurBiscuit) {
    keepHandOnSideWall()
  }
  prendBiscuit()
}

def keepHandOnSideWall():Int = {
  var sommeAngle:Int = 0
  if (estFaceMur) {
    (droite)
    sommeAngle = sommeAngle+1
  }
  else {
    avance()
    gauche()
    while (!estFaceMur) {
      avance()
      gauche()
      sommeAngle = sommeAngle-1
    }
    droite()
    sommeAngle = sommeAngle+1
  }
  return sommeAngle
}

def findNorthWall() {
  var etat:Int = 0
  var sommeAngle:Int = 0
  while (getY()!=0) {
    etat match {
      case 0 => setDirection(Direction.NORTH)
                while (!estFaceMur) {
                  avance()
                }
                etat = 1
      case 1 => sommeAngle = 0
                while (!isDirectionFree(Direction.NORTH) || sommeAngle!=0) {
                  sommeAngle = sommeAngle+keepHandOnSideWall()
                }
                etat = 0
      case _ => println("Ce cas ne devrait pas arriver.")
    }
  }
}

def isDirectionFree(dir:Direction):Boolean = { //Renvoie true si la buggle peut aller dans la direction dir.
  val dirActuelle:Direction = getDirection()   //Sinon on renvoie false
  setDirection(dir)                            //La buggle retrouve sa direction initiale.
  if (!estFaceMur) {
    setDirection(dirActuelle)
    return true
  }
  else {
    setDirection(dirActuelle)
    return false
  }

}