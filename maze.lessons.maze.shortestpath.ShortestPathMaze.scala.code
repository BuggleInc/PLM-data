def tracechemin(x:Int,y:Int,nb:Int):Boolean = {
    
  setIndication(x,y,nb);

  
  if(getX()==x && getY()==y){
    return true
  }

  
  if(y+1<=getMondeHauteur()-1){
    if(!aMurNord(x,y+1))	{
      tracechemin(x,y+1,nb+1);
    }
  }
  if(x-1>=0){
    if(!aMurOuest(x,y)){
      tracechemin(x-1,y,nb+1);
    }
  }
  if(y-1>=0){
    if(!aMurNord(x,y))		{
      tracechemin(x,y-1,nb+1);
    }
  }
  if(x+1<=getMondeLargeur()-1){
    if(!aMurOuest(x+1,y)){
      tracechemin(x+1,y,nb+1);
    }
  }
  
  return false
  
}

def goBiscuit() {
  for(i<- 0 to (getMondeLargeur()-1)){
    for(j<- 0 to (getMondeHauteur()-1)){
    	if(aBiscuit(i,j)){
        tracechemin(i,j,0);
      }
  	}
  }
}

def yaller(){
    
  var x:Int = getX();
  var y:Int = getY();
  
  var mini:Int = getIndication(x,y);
  
  
  if(y+1<=getMondeHauteur()-1){
    if(getIndication(x,y+1)<mini)			{
      mini = getIndication(x,y+1);
      setDirection(Direction.SUD);
    }
  }
  if(x-1>=0){
    if(getIndication(x-1,y)<mini){
      mini = getIndication(x-1,y);
      setDirection(Direction.OUEST);
    }
  }
  if(y-1>=0){
    if(getIndication(x,y-1)<mini)		{
      mini = getIndication(x,y-1);
      setDirection(Direction.NORD);
  }
  }
  if(x+1<=getMondeLargeur()-1){
    if(getIndication(x+1,y)<=mini){
      setDirection(Direction.EST);
  }
  }
  
  avance();
  
}

override def run() {
  goBiscuit();
  while(!estSurBiscuit()){
    yaller();
  }
  prendBiscuit();
}