override def run() {
var x = 0
var y = 0

def dansLeCadre(a:Int,b:Int):Boolean={
	if((a<=getMondeLargeur() -1) && (b<=getMondeHauteur() -1) && (0<=a)&& (0 <=b)){true}else{false}
}

def indic(a:Int,b:Int){
	val c = getIndication(a,b)
	if(dansLeCadre(a,b-1) && getIndication(a,b-1) >= c && !aMurNord(a,b) ){setIndication(a,b-1,getIndication(a,b)+1);indic(a,b-1)}
	if(dansLeCadre(a-1,b) && getIndication(a-1,b) >= c && !aMurOuest(a,b) ){setIndication(a-1,b,getIndication(a,b)+1);indic(a-1,b)}
	if(dansLeCadre(a,b+1) && getIndication(a,b+1) >= c && !aMurNord(a,b+1)){setIndication(a,b+1,getIndication(a,b)+1);indic(a,b+1)}
	if(dansLeCadre(a+1,b) && getIndication(a+1,b) >= c && !aMurOuest(a+1,b)){setIndication(a+1,b,getIndication(a,b)+1);indic(a+1,b)}
		
}

def aLaNiche(){
	while(!estSurBiscuit()){
	var a = getX()
	var b = getY()
	var m = 9999
	var n = 9999
	var o = 9999
	var p = 9999
	if (dansLeCadre(a+1,b)){ m = getIndication(a+1,b); if(aMurOuest(a+1,b){m = 9999}}
	if (dansLeCadre(a,b+1)){ n = getIndication(a,b+1); if(aMurNord(a,b+1){n = 9999}}
	if (dansLeCadre(a-1,b)){ o = getIndication(a-1,b); if(aMurOuest(a,b){o = 9999}}
	if (dansLeCadre(a,b-1)){ p = getIndication(a,b-1); if(aMurNord(a,b){p = 9999}}
	(m,n,o,p) match{
		case (m,n,o,p) if m == getIndication(a,b) - 1 => setDirection(Direction.EAST); avance()
		case (m,n,o,p) if n == getIndication(a,b) - 1 => setDirection(Direction.SOUTH); avance()
		case (m,n,o,p) if o == getIndication(a,b) - 1 => setDirection(Direction.WEST); avance()
		case (m,n,o,p) if p == getIndication(a,b) - 1 => setDirection(Direction.NORTH); avance()
		case _ => avance()
	}
}
}

for(i <- 0 to getMondeLargeur() - 1){
	for(c <- 0 to getMondeHauteur() - 1){
		 if(aBiscuit(i,c)){x = i; y = c}
	}
}



setIndication(x,y,0)
indic(x,y)
aLaNiche()
prendBiscuit() 

}
