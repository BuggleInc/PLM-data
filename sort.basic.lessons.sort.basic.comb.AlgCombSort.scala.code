def combSort() {
var i =0
var ecart  = getNombreValeurs()
var swapped=false
do {
	swapped=false
	i=0
	if (ecart>1){
		ecart=(ecart.asInstanceOf[Double] / 1.3).asInstanceOf[Int]
		}
	
	
	while (i+ecart < getNombreValeurs()){
		
		if (plusPetit(i+1,i)) {
				echange(i,i+1)	 
				swapped=true
		}
		i +=1
		
	}
}
while (ecart>1 || swapped==true)
}











 // "ecart = lgr;
 //faire 
 //  si ecart>1 alors
  //   ecart = ecart / 1.3
 //  i = O
  // tant que i+ecart < lgr faire:
 //    si i et i+ecart doivent être inversés, le faire
  //   incrémenter i de 1
// tant que l'écart est plus grand que 1 ou que le dernier parcours a inversé au moins un élément