var state = 0;

def step(colors:Array[Color], rule:Array[Array[Array[Int]]] ) {
  val color : Color = getCouleurSol()
  var indice : Int = 0
  while (colors(indice) != color) {indice = indice +1}
  val colorToSet : Int = rule(state)(indice)(0)
  val move : Int = rule(state)(indice)(1)
  state = rule(state)(indice)(2)
  marquer(colors(colorToSet))
  move match {
    case 1 => avance()
    case 2 => gauche() ; avance()
    case 4 => retourne(); avance()
    case 8 => droite(); avance()    
  }
  
}




def step(rule:Array[Char], colors:Array[Color]) {
  
  var indice : Int = 0
  while (colors(indice) != color) {indice = indice +1}
  if (rule(indice) == 'R'){
    marquer(colors((indice+1)%colors.length))
    droite()
    avance()
  }
  if (rule(indice) == 'L'){
    marquer(colors((indice+1)%colors.length))
    gauche()
    avance()
  }
}

def marquer(c : Color) {
  setCouleurBrosse(c)
  baisseBrosse()
  gauche()
  droite()
  leveBrosse()
}