    /* Do not change these definitions */
    val STOP   = 0;
    val NOTURN = 1;
    val LEFT   = 2;
    val BACK   = 4;
    val RIGHT  = 8;

    val NEXT_COLOR = 0;
    val NEXT_MOVE  = 1;
    val NEXT_STATE = 2;
    
    
    var rule:Array[Array[Array[Int]]] = null // Change this
    var nbSteps:Int = 8342; // Change this

    /** init the rule array from a string defining a Langton's ant 
     * 
     *  You can use this method inside your init() method if you want 
     *  to test langton's ant instead of full turmites.
     */
    
    def init() 
    {
    		nbSteps = 8342;
    		setPos(8,33)
    		
    		//nbSteps = 8342
    		rule = Array( Array( Array(1,RIGHT,0), Array(1,RIGHT,1), Array(0,NOTURN,0), Array(0,NOTURN,1) ) );

		

    		
        /* Your code comes here. */

        /* Something like 
         *   nbSteps = 10000;
         *   rule = Array( Array( Array(0,NOTURN,0), Array(0, NOTURN, 0) ) ); 
         * but with possibly more states (ie, bigger second dimension), and more color (ie bigger third -- internal -- dimension) 
         * and naturally, less boring than this turmite doing absolutely nothing (runs forward endlessly).
         */

        /* It can also be something like
         *   nbSteps = 42;
         *   initLangton("RL");
         */

        /* remember to send your best creations for inclusion in the gallery */
    }
