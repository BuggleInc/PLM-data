JediEscaper:13: error: not found: value repererCasesAjdacentes
          	marquerCasesAdjacentes(repererCasesAjdacentes(i,j),i,j)
                                       ^JediEscaper:52: error: class Array takes type parameters
def repererCasesAdjacentes(X:Int,Y:Int):Array= //repère cases adjacentes
                                        ^JediEscaper:52: error: class Array takes type parameters
def repererCasesAdjacentes(X:Int,Y:Int):Array= //repère cases adjacentes
                                        ^JediEscaper:54: error: type mismatch;
 found   : (Boolean, Boolean, Boolean, Boolean)
 required: Array[Boolean]
  var casesAdjacentes:Array[Boolean]=(true,true,true,true)
                                     ^JediEscaper:79: error: not found: value casesAjdacentes
  if (casesAjdacentes(1)==true)
      ^JediEscaper:84: error: not found: value casesAjdacentes
  if (casesAjdacentes(2)==true)
      ^JediEscaper:86: error: Int does not take parameters
    if (getIndication(X+1,Y()==9999))
                           ^JediEscaper:98: error: too many arguments for method getIndication: (x: Int, y: Int)Int
  var indications:Array[Int]=(getIndication(getX()-1,getY()),getIndication(getX(),getY()-1,getIndication(getX()+1,getY()),getIndication(getX(),getY()+1)))
                                                                          ^JediEscaper:113: error: not found: value indication
  if (minimum==indication(1))                                                                 {
               ^