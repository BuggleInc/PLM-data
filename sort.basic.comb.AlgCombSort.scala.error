Erreur de compilation :
AlgCombSort:13: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Double): ?}
      if (plusPetit(i+ecart,i))
                    ^AlgCombSort:13: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
      if (plusPetit(i+ecart,i))
                     ^AlgCombSort:14: error: type mismatch;
 found   : Int
 required: ?{def +(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def +(x$1: ? >: Double): ?}
        echange(i,i+ecart)
                  ^AlgCombSort:14: error: overloaded method value + with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
        echange(i,i+ecart)
                   ^AlgCombSort:19: error: missing arguments for method || in class Boolean;
follow this method with `_' if you want to treat it as a partially applied function
  while (ecart>1 || )
                 ^