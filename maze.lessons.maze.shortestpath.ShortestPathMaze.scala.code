def coordonneesBiscuit() : Array[Int] = 
{
  var coordonnees = Array(0, 0)
  
  for (x <- 0 to getMondeLargeur() - 1)
  	for (y <- 0 to getMondeHauteur() - 1)
  		if (aBiscuit(x, y))
  			coordonnees = Array(x, y)
  
  return coordonnees
}

def marquerSol(depart:Array[Int])
{
  var compteur = 0
  var arreter = false
  setIndication(depart(0), depart(1), 0)
  
  while(!arreter)
  {
    var continuer = false
    for (x <- 0 to getMondeLargeur() - 1)
    {
      for (y <- 0 to getMondeHauteur() - 1)
      {
        if (getIndication(x, y) == compteur)
        {
          if (marquerCaseAutour(Array(x, y), compteur + 1))
          	continuer = true
        }
      }
    }
    
    if (!continuer)
    	arreter = true
    
    compteur += 1
  }
}

def marquerCaseAutour(coordonnees:Array[Int], valeur:Int) : Boolean =
{
  // retourne si au moins une case a ?t? marqu?e
  var caseMarquee = false
  
  if (coordonnees(0) > 0 && !aMurOuest(coordonnees(0), coordonnees(1)))
  {
    if (getIndication(coordonnees(0) - 1, coordonnees(1)) == 9999)
    {
    	setIndication(coordonnees(0) - 1, coordonnees(1), valeur)
    	caseMarquee = true
    }
  }
  
  if (coordonnees(1) > 0 && !aMurNord(coordonnees(0), coordonnees(1)))
  {
    if (getIndication(coordonnees(0), coordonnees(1) - 1) == 9999)
    {
    	setIndication(coordonnees(0), coordonnees(1) - 1, valeur)
    	caseMarquee = true
    }
  }
  
 	if (coordonnees(0) < getMondeLargeur() - 1)
  {
    if (!aMurOuest(coordonnees(0) + 1, coordonnees(1)) && getIndication(coordonnees(0) + 1, coordonnees(1)) == 9999)
    { 
      setIndication(coordonnees(0) + 1, coordonnees(1), valeur)
    	caseMarquee = true
    }
  }
  
  if (coordonnees(1) < getMondeHauteur() - 1)
  {
    if (!aMurNord(coordonnees(0), coordonnees(1) + 1) && getIndication(coordonnees(0), coordonnees(1) + 1) == 9999)
    { 
      setIndication(coordonnees(0), coordonnees(1) + 1, valeur)
    	caseMarquee = true
    }
  }
  
  return caseMarquee
}

def suivreIndications()
{
  val compteur = getIndication(getX(), getY())
  var direction = 3 // 0 : gauche, 1 : haut, 2 : droite, 3 : bas
  
  setDirection(Direction.NORD)
  
  if (getX() > 0)
  {
    gauche()
    if (!estFaceMur() && getIndication(getX() - 1, getY()) == compteur - 1)
    	direction = 0
    else
    	droite()
  }
  
  if (getY() > 0 && direction == 3)
  {
    if (!estFaceMur() && getIndication(getX(), getY() - 1) == compteur - 1)
    	direction = 1
  }
  
  if (getX() < getMondeHauteur() - 1 && direction == 3)
  {
    droite()
    if (!estFaceMur() && getIndication(getX() + 1, getY()) == compteur - 1)
    	direction = 2
    else
    	gauche()
  }
  
  if (direction == 3)
  {
    droite()
  	droite()
  }
  
  avance()
}

override def run()
{
 	val coordonneesFin = coordonneesBiscuit()
  marquerSol(coordonneesFin)
  
  while (!estSurBiscuit())
  	suivreIndications()
  
  prendBiscuit()
}
