<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Instruções</h2>

Parabéns! Você acaba de escrever seu primeiro programa! Você agora captou a
ideia: programar é simplesmente dar instruções simples para o computador que
as segue cegamente. A maior dificuldade é explicar tudo para algo tão idiota
quanto um computador...  
  
  <p>Programas são principalmente conjuntos de chamadas de métodos, que são nada
mais que listas de ordens simples dadas à máquina. É muito semelhante a uma
receita dizendo <i>Derreta os pedaços de chocolate, adicione açucar, mexa e
sirva</i>. Em seus programas, tais instruções são chamadas funções ou
métodos, e você deve acrescentar parêntesis para invocá-las:</p>  
		<pre>nomeDoMétodo()</pre>
		
   <p>Java precisa das instruções separadas por ponto-e-vírgula
(;).  O exemplo anterior poderia
ter sido escrito da seguinte forma.</p>
    
<pre>
derretaOsPedaçosDeChocolate();
adicioneAçucar();
mexa();
sirva();
</pre>
    


  <p>Obviamente, estes métodos específicos não existem por padrão em
Java, mas é possível definí-los você mesmo (vamos ver mais tarde
como definir seus próprios métodos).</p>
  
  <p>Por enquanto, vamos ficar apenas com as instruções do buggle. Existe um
método para cada botão do painel de controle interativo. Para alcançar o
mesmo efeito que o botão <b>avançar</b> (fazendo o buggle avançar um passo),
você precisa escrever o seguinte no editor: </p>
  <pre>avançar();</pre>
  <p>Da mesma forma, para obter o mesmo efeito que os botões <b>[!java|scala|"
"python]recuar[/!]</b>, <b>esquerda</b> and
<b>direita</b>, você precisa respectivamente:</p>
<pre>
recuar();
esquerda();
direita();
</pre>

	 <p>O botão <b>mark</b> é diferente, pois corresponde a dois métodos: o primeiro
move a caneta para cima e o segundo move a caneta para baixo.</p>
<pre>
levantarPincel();
abaixarPincel();
</pre>
  <p>O buggle tem outros métodos, que estão no menu "Ajuda/sobre este mundo" e
serão introduzidos quando forem necessários.</p>


  <h3>Objetivo do exercício</h3><a name="Objectives"/> nosso segundo programa será um pouco mais complicado,
mas não muito. O objetivo é que seu buggle simplesmente desenhe uma casa (um
quadrado), e se esconda dentro. Verifique o mundo objetivo para ver
exatamente o que isto significa. 

<p>Quando for para o próximo exercício, observe que existe um sub-exercício
depois deste.  Por padrão, ele fica escondido no menu e você tem que abrir o
sub-menu para vê-lo. Quando você troca de exercício, a maioria dos
exercícios fica escondida por que a árvore está recolhida, como segue:</p>
<img src="sub-exercise-folded.png"/> 

<p>Você tem que clicar no pequeno símbolo a esquerda do buggle para expandir a
árvore, como segue:</p>
<img src="sub-exercise-unfolded.png"/> 
</body></html>