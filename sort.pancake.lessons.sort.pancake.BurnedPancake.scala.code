def solve() {
  val stackSize = getStackSize();
		for ( rank <- stackSize-1 to 0 by -1) {
			
			if ( getPancakeRadius(rank)!=rank+1 || isPancakeUpsideDown(rank)) {
				var indexBigPancake = -1;
				for (currentPancake <- 0 to rank)
					if ( getPancakeRadius(currentPancake) == rank+1) 
						indexBigPancake = currentPancake;	
				
				if ( indexBigPancake != 0 )
					flip(indexBigPancake+1);	
					
				if ( ! ( rank == 0) ) {
					if (!isPancakeUpsideDown(0)) 
						flip(1);	
					flip(getPancakeRadius(0));	
				} else {
					if (isPancakeUpsideDown(0)) 
						flip(1);	
					
				}
			}	
		}
}