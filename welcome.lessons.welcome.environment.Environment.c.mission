<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Benvenuto nel mondo dei Buggles</h2>

<p>Hai appena iniziato il Programm's Learning Machine. Questo è il un sistema
di gestione dell'apprendimento mirato all'insegnamento delle arti della
programmazione dei computer attraverso esercizi interattivi. Esso è
costituito da un insieme di esercizi raggruppati in lezioni, permettendo la
pratica al proprio ritmo. Attualmente l'ambiente è configurato per essere
programmato nel linguaggio di programmazione C, ma se vuoi puoi
cambiarlo dal menù Language o cliccando nell'icona di C, a destra
della status bar in basso.</p>

<p>In questa prima lezione i buggles vi guideranno attraverso i vostri primi
passi nella programmazione.</p>

  <h3>I <i>buggles</i>? Che cosa sono??</h3>

  <p>I buggles sono piccoli animali obbedienti ad ogni ordine che si possa dare
loro. In ogni esercizio dovrete fornirgli le giuste istruzioni così che il
mondo diventi come l'obiettivo dell'esercizio. Per esempio in questo
esercizio mostrerete le istruzioni al vostro buggle per muoversi una volta
in avanti. Potete vedere questo verificando le differenze che intercorrono
fra le visuali <i>World</i> e <i>Objective</i>. Dipendentemente dalle
lezioni (e dalle vostre configurazioni nel menù Language), il codice dovrà
essere scritto in Java, Python o Scala (in base all'esercizio).</p>
  
  <h3>Ambiente di sviluppo</h3>

  <p>Before going any further, get familiar with the working environment. Have a
look at the several elements composing the main window, move your mouse over
them to show the tooltip, and experiment with the elements to see what they
do.  The white area below is the console: this is where errors and messages
get displayed.</p>
  
  <p>Se il vostro codice contiene errori (e i programmi finiscono sempre per
averli) il computer visualizzerà i messaggi di errore nella
console. Ovviamente voi dovrete correggere gli errori per concludere
l'esercizio. I messaggi che verranno mostrati potrebbero suonare spaventosi
ad una prima occhiata, ma non abbiate paura. Il compilatore è solamente
limitato nelle sue abilità comunicative, ma non è malvagio. Se guardate da
vicino, la soluzione per risolvere il vostro problema è scritta in mezzo a
questi criptici messaggi. Come vedrete, con un poco di abitudine, imparerete
ad usarli.</p>
  
  <h3>Cosa dovrei fare?</h3>
  
  <p>È arrivato il momento di scrivere il primo programma. Semplicemente chiedete
al vostro buggle di muoversi un passo in avanti usando il pannello Source
Code Per fare questo semplicemente scrivete il seguente codice (cliccare sui
controlli interattivi non è abbastanza: Dovete scrivere il codice dopo aver
fatto gli esperimenti interattivi).</p>
   <pre>stepForward();</pre>
  <p>Non dimenticate il <code>;</code> finale che dirà al compilatore che
l'istruzione è finita (si, i computer sono tanto stupidi da non
<i>intuire</i> cose ovvie come questa).</p>
  
  <p>Quando avrete finito cliccate su run. Potrete procedere al prossimo
esercizio una volta che il programma funzionerà.</p>
</body></html>