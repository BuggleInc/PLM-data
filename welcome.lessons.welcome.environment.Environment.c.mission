<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Bienvenue dans le monde des buggles</h2>

<p>Vous venez de lancer PLM, l'exerciseur du programmeur (Programmer's Learning
Machine). Il s'agit d'une plate-forme pédagogique destinée à simplifier
l'apprentissage de la programmation. Il est constitué d'un ensemble
d'exercices groupés par leçons, pour vous permettre de progresser à votre
rythme. Pour l'instant, l'outil est configuré pour vous permettre de
programmer en C, mais vous pouvez changer de langage de
programmation grâce au menu Langage si vous le désirez, ou en cliquant sur
l'icône du C à droite de la barre d'état (en bas de la fenêtre).</p>

<p>Dans cette première leçon, les buggles guideront vos premiers pas en
programmation.</p>

  <h3>Les <i>buggles</i> ? Qu'est ce que c'est ??</h3>

  <p>Les buggles sont de petites bêtes qui obéissent aux ordres que vous leur
donnez. Dans chaque exercice, vous devez donner des ordres à vos buggles
pour faire en sorte que le monde ressemble à l'objectif de l'exercice. Par
exemple dans cet exercice, vous devez instruire votre buggle pour qu'elle
avance d'un pas. Observez la différence entre l'état initial et l'objectif
en utilisant les panneaux à droite. Selon la leçon (et vos réglages), vous
devez écrire vos programme dans l'un des langages de programmation suivant :
Java, Python ou Scala (en fonction de l'exercice).</p>
  
  <h3>L'environnement de travail</h3>

  <p>Avant d'aller plus loin, familiarisez vous avec l'environnement. Observez
les différents éléments composant la fenêtre, placez la souris dessus pour
voir les bulles d'aide, et essayez les pour voir ce qu'ils font. La zone
blanche en bas est la console : c'est là que les erreurs et messages sont
affichés.</p>
  
  <p>Si votre code contient des erreurs (et les programmes finissent toujours par
en contenir), l'ordinateur affichera les messages d'erreur sur la
console. Vous devez bien entendu corriger ces erreurs pour réussir les
exercices. Les messages affichés peuvent paraître inquiétant au premier
abord, mais pas de panique. Le compilateur est seulement pas très doué pour
communiquer, il n'est pas fondamentalement méchant. En regardant de plus
près, la solution pour corriger les problèmes est inscrite dans ces messages
cryptiques. Vous verrez, avec un peu d'entraînement, vous vous y habituerez.</p>
  
  <h3>Que dois-je faire ?</h3>
  
  <p>Il est temps d'écrire votre premier programme. Demandez simplement de faire
un pas en avant dans le panneau de Code Source. Pour cela, écrivez
simplement le code suivant. Cliquer sur les contrôles interactifs ne suffit
pas. Il faut écrire le code après avoir expérimenté interactivement.</p>
   <pre>stepForward();</pre>
  <p>N'oubliez pas le <code>;</code> final, car cela indique au compilateur que
l'instruction est terminée (oui, les ordinateurs sont si stupides qu'il faut
leur préciser des choses aussi simples).</p>
  
  <p>Une fois terminé, cliquez sur «Exécuter». Quand cela fonctionne, vous pouvez
passer à l'exercice suivant.</p>
</body></html>