Compilation error:
AlgShellSort:20: error: type mismatch;
 found   : Int
 required: ?{def -(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def -(x$1: ? >: Double): ?}
    while(k>0 && getValeur(k-ecart)>v){      
                           ^AlgShellSort:20: error: overloaded method value - with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
    while(k>0 && getValeur(k-ecart)>v){      
                            ^AlgShellSort:21: error: type mismatch;
 found   : Int
 required: ?{def -(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def -(x$1: ? >: Double): ?}
        copie(k-ecart,k)
              ^AlgShellSort:21: error: overloaded method value - with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
        copie(k-ecart,k)
               ^AlgShellSort:22: error: type mismatch;
 found   : Int
 required: ?{def -(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int to ?{def -(x$1: ? >: Double): ?}
        k=k-ecart
          ^AlgShellSort:22: error: overloaded method value - with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
        k=k-ecart
           ^