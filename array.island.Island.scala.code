// Manière itérative
def island1(num:Array[Int]): Int = {
  var x:Int=num.length
  var compteur:Int=0
  var actuel:Int=num(0)
  for (i <- 1 to (x-1)){
    if (num(i)>actuel){
      compteur = compteur + 1
    }
    actuel = num(i)
  }
  return compteur
}

// Manière récursive

def island(num:Array[Int]):Int = {
  def islandRecursif(nume:Array[Int],x:Int,compteur:Int,actuel:Int,position:Int): Int {
    match position
    case(<x && num(position)>actuel) => islandRecursif(nume,x,(compteur+1),num(position),(position+1))
    case (<x && num(position)<actuel) => islandRecursif(nume,x,compteur,num(position),(position+1))
    case >x => return compteur
  }
  islandRecursif(num,(num.length - 1),0,num(0),1)
}