public void run() {
	snakeBuggle();
}//end run

void snakeBuggle(){
int steps = 7;

	setBrushColor(Color.RED);
	brushDown();
	
	//loop rows
	for(int i = 0; i < steps; i++){
		//paint cells
		for(int j = 1; j < steps; j++){
			forward();
		}

		if(!finalPos()){
			if(getDirection() == Direction.EAST){
				left();
				forward();
				left();
			}else if(getDirection() == Direction.WEST){
				right();
				forward();
				right();
			}
		}	
	}//end for	
}//end snakeBuggle

public boolean finalPos(){
int spins = 4;
boolean d = false;

//	for(int i = 0; i < spins; i++){
		left();
		//check for north facing wall
		if(isFacingWall() && getDirection() == Direction.NORTH){
			d = true;
		}
		right();
//	}
	return(isFacingWall() && d);
}//end finalpos
