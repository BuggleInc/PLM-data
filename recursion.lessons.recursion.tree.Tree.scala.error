Tree:6: error: type mismatch;
 found   : Int(2)
 required: ?{def *(x$1: ? >: Double): ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2long in object Int of type (x: Int)Long
 and method int2float in object Int of type (x: Int)Float
 are possible conversion functions from Int(2) to ?{def *(x$1: ? >: Double): ?}
j=2*angle;
  ^Tree:6: error: overloaded method value * with alternatives:
  (x: Int)Int <and>
  (x: Char)Int <and>
  (x: Short)Int <and>
  (x: Byte)Int
 cannot be applied to (Double)
j=2*angle;
   ^