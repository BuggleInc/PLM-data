var state = 0;

val NEW_COLOR = 0;
//val NEXT_MOVE = 1;
//val NEXT_STATE = 2;

//val STOP = 0;
//val NOTURN = 1;
//val LEFT = 2;
val U_TURN = 4;
//val RIGHT = 8;


def step(colors:Array[Color], rule:Array[Array[Array[Int]]] ) {
  
	var groundColor:Color = getGroundColor()
  var currentColor:Int = 0
  
  for (i <- 0 to colors.length -1) {
    if (colors(i) == groundColor) {
    	currentColor = i
    }
  }
  
  mark(colors(rule(state)(currentColor)(NEW_COLOR)))
  
  rule(state)(currentColor)(NEXT_MOVE) match {
    case LEFT => left();forward();
    case NOTURN => forward()
    case U_TURN => back(); forward();
    case RIGHT => right(); forward();
  }
  
  state = rule(state)(currentColor)(NEXT_STATE)

  

}


def mark(c:Color) {
  setBrushColor(c);
  brushDown();
  brushUp();
}