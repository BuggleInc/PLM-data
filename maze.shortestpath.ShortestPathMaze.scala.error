Compilation error:
ShortestPathMaze:49: error: not found: type NeighborPos
def processNeighbor(x:Int, y:Int, np:NeighborPos, min:Int) : Int = {
                                     ^ShortestPathMaze:54: error: not found: value TOP
    case TOP =>
         ^ShortestPathMaze:58: error: not found: value BOTTOM
    case BOTTOM =>
         ^ShortestPathMaze:59: error: not found: value hasBottomWall
      if (hasBottomWall(x, y)) return min;
          ^ShortestPathMaze:62: error: not found: value RIGHT
    case RIGHT =>
         ^ShortestPathMaze:63: error: not found: value hasRightWall
      if (hasRightWall(x, y)) return min;
          ^ShortestPathMaze:66: error: not found: value LEFT
    case LEFT =>
         ^ShortestPathMaze:86: error: not found: value TOP
        var min = processNeighbor(x, y, TOP, NO_INDICATION);
                                        ^ShortestPathMaze:87: error: not found: value BOTTOM
        min = processNeighbor(x, y, BOTTOM, min);
                                    ^ShortestPathMaze:88: error: not found: value RIGHT
        min = processNeighbor(x, y, RIGHT, min);
                                    ^ShortestPathMaze:89: error: not found: value LEFT
        min = processNeighbor(x, y, LEFT, min);
                                    ^