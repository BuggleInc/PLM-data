<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Courbe du Dragon (2)</h2>

<p>La solution pr?c?dente n?cessite que la tortue se t?l?porte ou qu'elle l?ve
parfois le crayon pour tracer la courbe.  En effet, entre la destination du
trait trac? par le premier appel r?cursif ne correspond pas ? la source du
trait qui doit ?tre trac? par le second appel r?cursif.  C'est pourquoi il
?tait n?cessaire d'utiliser la m?thode <code>setPos()</code></p>	

<p>Dans cette le?on, vous allez donc r?aliser une m?thode r?cursive qui permet
de tracer la courbe du dragon sans lever le crayon. Pour ce faire, vous
d?finirez une seconde m?thode r?cursive qui trace la courbe ? l'envers.</p>

<p>La m?thode <code>dragon()</code> sera d?finie r?cursivement en fonction des
m?thodes <code>dragon()</code> et <code>dragonInverse()</code>. De m?me, la
m?thode <code>dragonInverse()</code> sera d?finie r?cursivement en terme de
<code>dragon()</code> et de <code>dragonInverse()</code>. Voici un bien bel
exemple de <i>r?cursivit? crois?e</i>.
</p>

<p>
Le prototype de la m?thode <code>dragon()</code> reste le m?me que
pr?c?demment :</p>
<pre>dragon(ordre:Int, x:Double, y:Double, z:Double, t:Double)</pre>

<p>Les coordonn?es (u, v) du nouveau point introduit par la m?thode
<code>dragon()</code> seront :</p>
<pre>
u = (x + z)/2 + (t - y)/2
v = (y + t)/2 - (z - x)/2
</pre>

<p>Le prototype de la m?thode <code>dragonInverse()</code> est identique : :</p>
<pre>dragonReverse(ordre:Int, x:Double, y:Double, z:Double, t:Double)</pre>

<p>Les coordonn?es (u, v) du nouveau point introduit par la m?thode
<code>dragonInverse()</code> seront :</p>
<pre>
u = (x + z)/2 - (t - y)/2
v = (y + t)/2 + (z - x)/2
</pre>

<p>Afin de rendre, plus visible le travail de chacune des deux m?thodes
r?cursives, le trait trac? par la m?thode <code>dragon()</code> devra ?tre
rouge (<code>Color.red</code>) et le trait trac? par la m?thode
<code>dragonInverse</code> devra ?tre bleu (<code>Color.blue</code>).</p>

<p>Consultez les objectifs de chaque monde pour comprendre comment ?crire la
fonction.</p> 
</body></html>