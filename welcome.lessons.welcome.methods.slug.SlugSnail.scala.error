SlugSnail:4: error: missing arguments for method isFacingTrail in class SlugSnail;
follow this method with `_' if you want to treat it as a partially applied function
		while (isFacingTrail && !estSurBiscuit) {
                       ^SlugSnail:9: error: missing arguments for method isFacingTrail in class SlugSnail;
follow this method with `_' if you want to treat it as a partially applied function
		if (!isFacingTrail && !estFaceMur) {
                     ^SlugSnail:11: error: missing arguments for method isFacingTrail in class SlugSnail;
follow this method with `_' if you want to treat it as a partially applied function
			if (!isFacingTrail && estFaceMur) {
                             ^SlugSnail:16: error: missing arguments for method isFacingTrail in class SlugSnail;
follow this method with `_' if you want to treat it as a partially applied function
		if (!isFacingTrail && estFaceMur && !estSurBiscuit) {
                     ^SlugSnail:25: error: missing arguments for method isFacingTrail in class SlugSnail;
follow this method with `_' if you want to treat it as a partially applied function
	if (!isFacingTrail) {
             ^SlugSnail:39: error: too many arguments for method getCouleurSol: ()java.awt.Color
		if (getCouleurSol(c:Color) == c:Color) {
                                 ^SlugSnail:39: error: type mismatch;
 found   : java.awt.Color
 required: Boolean
		if (getCouleurSol(c:Color) == c:Color) {
                                               ^