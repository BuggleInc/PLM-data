override def run() {
  var sommeAngle = 0
  while (!estSurBiscuit()) {
    while (allerN()) {
      goN()
    }
    droite()
    /*while (quitterMur(sommeAngle)) {
      gauche()
 			sommeAngle = sommeAngle + 1
			if (estFaceMur()) {
    		droite()
   			sommeAngle = sommeAngle - 1
			}
      if (estFaceMur()) {
   		droite()
 			sommeAngle = sommeAngle - 1
 			} else {avance()}
		}*/
  }
  prendBiscuit()
}



def quitterMur(sommeAngle:Int):Boolean = {
  if ((sommeAngle == 0) && (allerN())) {return true}
  else if (estSurBiscuit()) {return true}
  else {return false}
}

def allerN():Boolean = {
  var d = getDirection()
  if (d == Direction.NORTH) {return !estFaceMur()}
  else if (d == Direction.EAST) {
    gauche()
    var r = !estFaceMur()
    droite()
    return r}
 	else if (d == Direction.WEST) {
    droite()
    var r = !estFaceMur()
    gauche()
    return r}
  else {
    gauche()
    gauche()
    var r = !estFaceMur()
    gauche()
    gauche()
    return r
  }
}
  
def goN() = {
  var d = getDirection()
  d match {
    case Direction.NORTH => avance()
    case Direction.EAST => gauche(); avance()
    case Direction.WEST => droite(); avance()
    case Direction.SOUTH => gauche(); gauche(); avance()
  }
}

def KeepHandWall() = {
  gauche()
  if (estFaceMur()) {
    droite()
  }
}

def go() = {
  if (estFaceMur()) {
    droite()
  } else {avance()}
}