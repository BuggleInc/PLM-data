var virages = 0
var first = true

def libreAuNord():Boolean = {
  
  var res = false
  var dirInit = getDirection()
  setDirection(Direction.NORD)
  res = estFaceMur()
  setDirection(dirInit)
  return res
  
}

def murAGauche():Boolean = {
  
  var res = false
  gauche()
  res = estFaceMur()
  droite()
  return res 
  
}


def fonceAuNord() {
  
  setDirection(Direction.NORD)
  while (!estFaceMur()) {
    
    avance()
    
  }
  
}

def longerMurGauche() {
  
  if (murAGauche()) {
    
    if (estFaceMur()) {
      
      droite()
      virages = virages - 1
      first = false
      return
    
    } else {
      
      avance()
      
    }
    
  } else {
      
    	gauche()
    	virages = virages + 1
    	first = false
      avance()
    
  }
  
}


override def run() {
  
  while (!murAGauche()) {
    
    gauche()
    avance()
    droite()
    
  }
  
  while (!estSurBiscuit()) {
    
    longerMurGauche()
    if (virages==0 && !first && getDirection==Direction.NORD) {
      
      fonceAuNord()
      
    }
    
  }
  
  prendBiscuit()
  
}