 ecart = lgr;
 faire 
   si ecart>1 alors
     ecart = ecart / 1.3
   i = O
   tant que i+ecart < lgr faire:
     si i et i+ecart doivent être inversés, le faire
     incrémenter i de 1
 tant que l'écart est plus grand que 1 ou que le dernier parcours a inversé au moins un élément

def combSort() {
	var ecart = getNombreValeurs();
	var invers = true;
	while(ecart >= 1.0 || invers){
		invers=false;
		if(ecart > 1){
			ecart = (ecart.asInstanceOf[Double] / 1.3).asInstanceOf[Int];
		}
		var i = 0;
		while(i+ecart < getNombreValeurs()){
			if(plusPetit(i+ecart,i)){
				echange(i+ecart,i);
				i+=1;
				invers = true;
			}
		}
	}
}
