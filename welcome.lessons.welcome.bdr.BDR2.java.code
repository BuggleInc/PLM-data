boolean fini = false;

while (!fini) {

	if (litMessage().equals("R")) {
		droite();
		avance();
	}
	else if (litMessage().equals("L")) {
		gauche();
		avance();
	}
	else if (litMessage().equals("I")) {
		retourne();
		avance();
	}
	else if (litMessage().equals("A")) {
		avance();
	}
	else if (litMessage().equals("B")) {
		avance();
		avance();
	}
	else if (litMessage().equals("C")) {
		avance();
		avance();
	   	avance();
	}
	else if (litMessage().equals("D")) {
		avance();
		avance();
		avance();
		avance();
	}
	else if (litMessage().equals("E")) {
		avance();
		avance();
		avance();
		avance();
		avance();
	}
	else if (litMessage().equals("F")) {
		avance();
		avance();
	   	avance();
	   	avance();
		avance();
		avance();
	}
	else if (litMessage().equals("Z")) {
   		recule();
	}
	else if (litMessage().equals("Y")) {
	 	recule();
	    	recule();
	}
	else if (litMessage().equals("X")) {
	    	recule();
	    	recule();
	    	recule();
	}
	else if (litMessage().equals("W")) {
   		recule();
   		recule();
   		recule();
   		recule();
	}
	else if (litMessage().equals("V")) {
	 	recule();
	    	recule();
	    	recule();
   		recule();
   		recule();
	}
	else if (litMessage().equals("U")) {
	    	recule();
	    	recule();
	    	recule();
	    	recule();
   		recule();
   		recule();
	}
	else {
	    	fini = true;
	}

}

/*
 * 'R'
Tourner à droite et avancer d'une case
'L'
Tourner à gauche et avancer d'une case
'I'
Se retourner (faire demi-tour) et avancer d'une case
'A'
Avancer d'une case
'B'
Avancer de deux cases
'C'
Avancer de trois cases
'D'
Avancer de quatre cases
'E'
Avancer de cinq cases
'F'
Avancer de six cases
'Z'
Reculer d'une case
'Y'
Reculer de deux cases
'X'
Reculer de trois cases
'W'
Reculer de quatre cases
'V'
Reculer de cinq cases
'U'
Reculer de six cases
(n'importe quoi d'autre)
Arrêter de danser.*/