def tree(steps:Int, length:Double, angle:Double, shrink:Double)    {
	steps match {
	case 0 => 
	case _ => {
		current(steps) ;
		baisseCrayon()
		avance (length);
		droite(angle);
		tree (steps - 1, length *shrink , angle , shrink)

		gauche(angle)
		gauche(angle)
		tree (steps - 1, length *shrink , angle , shrink)
		droite(angle)
		leveCrayon()
		recule(length)
	}
	} 
}
