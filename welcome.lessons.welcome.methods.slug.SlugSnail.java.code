 public void hunt(Color c) {
     hunt(c);
 }

 public void hunt(Color col) {

while(!isOverBaggle())
{	
if(isFacingTrail(col)==true)
{
	brushDown();
	brushUp();
	forward();   
}
}
pickupBaggle();
brushDown();
brushUp();
}      
/**
 * checks if buggle has a trail in front of it
 */
boolean isFacingTrail(Color cl) {
	
shifter(cl);
	
 if(trail ==1)
 {
 trail = 0;	
 return true;
 }
 else
 return false; 
	  
}
/**
 * checks blocks in the vicinity to look for trail
 */
public void shifter(Color l)
{
	for(int i=0;i<4;i++)
	{
		check(l);
		if(trail ==1)
		{
		backward();	
		break;
		}
		if(isFacingWall())
		left();
		else
		{
		backward();
		right();
		}        
	}
	
}
int trail = 0;
/**
 * checks if buggle is on trail
 */
public void trail(Color ccol) 
{
	if(getGroundColor().equals(ccol))
	{
	trail = 1;
	}
	
}
/**
 * moves only if buggle is not facing wall
 */
public void check(Color coll)
{
	if(!isFacingWall())
	{
		forward();
		trail(coll);
	}

	
}  
