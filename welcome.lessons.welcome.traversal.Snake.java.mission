<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body><!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Snake World</h2>

<p>We will now teach the buggle to explore its world. Its initial position is
the bottom left corner, and it should visit any cells up to the top
(coloring the ground on its path. The main loop of your code is something like:</p>
<pre>
 move brush down
 while we did not reach the final position
   move like a snake
</pre>

<p>We thus have to write two specific methods: The first one
returns a boolean indicating whether we are on a final position while the
second moves one snake step forward.</p>

<p>We reached the final position if and only if both conditions are true:</p>
<ul>
  <li>We are facing a wall</li>
  <li>There is a wall on the north of the buggle. So, if the buggle is facing
east, you should check whether there is a wall on the left, and if the
buggle is facing west, you should check on the right side.<br/>
      We can get the current heading of the buggle using the
<code>getDirection()</code>, and we know whether it looks east using
<code>getDirection() == Direction.EAST</code> (WEST for west).<br/>
      To check, nothing magical: you have to turn the buggle and check whether it is facing a wall afterward.</li>
</ul>

<p>Then, a snake step can be achieved by moving one step forward if we are not
facing a wall, and moving to the upper line else (i.e., if you look to the
west facing a wall, you have to turn right, forward and turn right).</p>

<p>Hint: the main loop of your code must continue while the
testing function returns false. There is two ways of writing it:</p>
<pre>while (testingFunction() == false) {</pre>
<p>
Since the exclamation mark (!) denotes the boolean negation in Java, you may write it as:</p>
<pre>while (!testingFunction()) {</pre>

<p>Your turn...</p>

</body></html>