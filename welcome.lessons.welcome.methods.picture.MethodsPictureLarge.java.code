public void run() {
	//for(int j = 0; j < 3; j++){
		for(int x = 0, y = 9; x < y; x++){
			rowOfPatterns();
			if(x < 8){
				shiftBuggle();
			}else{
				resetBuggle();
			}
		}
	//}
}

void makePattern() {
int loops = 4;

	//this loop draws 4 V's
	for(int i = 0; i < loops; i++){
		if(i == 0) makeV(Color.yellow);
		if(i == 0) makeV(Color.red);
		if(i == 0) makeV(Color.blue);
		if(i == 0) makeV(Color.green);
	}
}//end method

void makeV(Color c){
int steps = 5;

		//this loop draws a V
		for(int x = 0; x <= steps; x++){
			
			if(x == 1 || x == 3 || x == 5){
				setBrushColor(c);
				brushDown();
				brushUp();
			}

			if(x == 3 || x == 4){
				left();
			}

			if(x < steps){
				forward();
			}
				
			if(x == 5){
				left();
				forward();
				left();
				forward();
				forward();
				//forward();
				left();
			}
		}//end for
}// end makeV

void newStartPos(){
int steps = 5;
	//move buggle to new start position
	//to make a new pattern
	for(int j = 0; j < steps; j++){
		forward();
	}
}

//move buggle so it can start a new row
void shiftBuggle(){
int up = 5;
int across = 40;

	left();
	
		for(int i = 0; i < up; i++){
			forward();
		}

		left();
		
		for(int y = 0; y < across; y++){
			forward();
		}
		
	back();
}

//move buggle back to starting cell after drawing the last row
void resetBuggle(){
int steps = 40;
	back();
		
	for(int y = 0; y < steps; y++){
		forward();
	}

	left();

	for(int y = 0; y < steps; y++){
		forward();
	}

	left();
}

void rowOfPatterns(){
	for(int i = 0; i < 8; i++){
		makePattern();
		newStartPos();
	}

	makePattern();
}

