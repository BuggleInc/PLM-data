public void run() {
	findBuggle();
//	escapeTheMaze();
}
public void findBuggle(){
int height = getWorldHeight();
int width = getWorldWidth();

	//loop rows
	for(int i = 0; i < height; i++){
		for(int j = 0; j < width; j++){
			if(hasBaggle(){
				setIndication(i, j, 0);
			}
		}
	}
}
public void distanceToExit(){
	
}
public void escapeTheMaze(){
int turns = 0;
//set favourite direction
setDirection(Direction.NORTH);

	do{	
		//go in favourite direction
		if(turns == 0){
			while(!isFacingWall()){
				forward();
			}
		}

		if(isFacingWall()){
			right();
			turns--;
		}else{
			forward();
			left();
			turns++;
		}

		//pick up baggle
		if(isOverBaggle()){
			pickUpBaggle();
			setDirection(Direction.NORTH);
		}
		
	}while(!isCarryingBaggle());
}//end escapeTheMaze
