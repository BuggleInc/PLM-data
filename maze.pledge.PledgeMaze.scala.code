//Notons que l'algorithme precedent trouve bien la sortie (meme si le grand nombre de tour de boucle fait que l'on obtient un time out juste apres qu'il est pris le buggle)

var sommeAngle = 0; //Compte dans le sens trigonometrique

override def run()
{  
  while (getY() > 0)
  {
  	while (!estFaceMur() && getY() > 0) avance();
    gauche();
    sommeAngle+=1;
    
    while (sommeAngle != 0) keepHandOnSideWall();
	}
  gauche();
  
  //Recherche la sortie
  while (!estSurBiscuit()) keepHandOnSideWall();
  prendBiscuit();
}

def keepHandOnSideWall()
{
  droite();
  sommeAngle-=1;
  
  if (estFaceMur())
  {
    gauche();
    gauche();
    sommeAngle+=2;
    keepHandOnSideWall();
  }
  else avance();
}


def isDirectionFree(dir:Direction):Boolean =
{
  var nbTours = 0;
  var isMurDir = false;
  
  while (getDirection() != dir)
  {
    gauche();
    nbTours+=1;
  }
  isMurDir = estFaceMur();
  
  for (i <- 1 to nbTours) droite();
  
  return isMurDir;
}