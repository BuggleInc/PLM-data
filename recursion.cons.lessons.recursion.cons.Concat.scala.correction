$package
import plm.universe.bat.{BatEntity,BatWorld,BatTest}; 
import plm.universe.World; 
import scala.collection.JavaConverters._;
class reverse extends BatEntity { 
   override def run(t: BatTest) {
 val res = concat( (if (t.getParameter(0) == null) {  Nil} else if (t.getParameter(0).isInstanceOf[lessons.recursion.cons.universe.RecList]) {  t.getParameter(0).asInstanceOf[lessons.recursion.cons.universe.RecList].toList().asInstanceOf[java.util.List[Int]].asScala.toList} else {  t.getParameter(0).asInstanceOf[java.util.List[Int]].asScala.toList}) , (if (t.getParameter(1) == null) {  Nil} else if (t.getParameter(1).isInstanceOf[lessons.recursion.cons.universe.RecList]) {  t.getParameter(1).asInstanceOf[lessons.recursion.cons.universe.RecList].toList().asInstanceOf[java.util.List[Int]].asScala.toList} else {  t.getParameter(1).asInstanceOf[java.util.List[Int]].asScala.toList}) );
try {
   t.setResult(if (res==null||res == Nil) {null} else {res.asInstanceOf[List[Int]].asJava})
} catch {
  case e:java.lang.ClassCastException => t.setResult(res)
}

   }
def concat(l1:List[Int],  l2:List[Int]): List[Int] = {
  def reverse_helper(todo:List[Int], done:List[Int]):List[Int] = {     if (todo == Nil) return done
     return reverse_helper(todo.tail, todo.head::done)
  }
  reverse_helper(  reverse_helper(l1, Nil), l2  )
} }