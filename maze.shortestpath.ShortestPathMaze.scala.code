var x = 0
var y = 0 
var sol = 0
override def run() {
  chercherLeBiscuit()
  var Coord = ([x,y])
  while(Coord[sol]!=()){
    a = Coord[sol].size()
    for (i <- 0 to Coord[sol].size-1){
      Coord[sol+1]=Coord[sol+1]+marquage(Coord[sol][0],Coord[sol],[1],sol)
      Coord[sol]=Coord[sol].tail()
      Coord[sol]=Coord[sol].tail()
    }
    sol += 1
  }
}


def chercherLeBiscuit(){
  while (!aBiscuit(x,y)){
    if (y!=getMondeHauteur()-1){
      y += 1
    } else {
      x += 1
      y = 0
    }
  }
}

def marquage(x:Int,y:Int,sol:Int):List ={
  var L = []
  if (!aMurNord(x,y) && y!=0 && getIndication(x,y-1)==9999){
    if (check(x,y-1,sol+1)==true){
    	setIndication(x,y-1,sol+1);
      L=L+[x,y-1]
    } 
  }
  if (!aMurOuest(x,y) && x!=0 && getIndication(x-1,y)==9999){
    if (check(x-1,y,sol+1)==true){
    	setIndication(x-1,y,sol+1);
      L=L+[x-1,y]
    }
   }
  if (x!=getMondeLargeur()-1 && !aMurOuest(x+1,y) && getIndication(x+1,y)==9999){
    if (check(x+1,y,sol+1)==true){
    	setIndication(x+1,y,sol+1);
      L=L+[x+1,y]
    }
  }
  if (y!=getMondeHauteur()-1 && !aMurNord(x,y+1) && getIndication(x,y+1)==9999){
    if (check(x,y+1,sol+1)==true){
    	setIndication(x,y+1,sol+1);
      L=L+[x,y+1]
    }
	}
  return L
}

def check(x:Int,y:Int,sol:Int):Boolean = {
  var etat = true
  if (!aMurNord(x,y) && y!=0){
    if (sol>=Abso(sol-getIndication(x,y-1)) && Abso(sol-getIndication(x,y-1))>=2){
      etat=false
    }
  }
  if (!aMurOuest(x,y) && x!=0){
    if (sol>=Abso(sol-getIndication(x-1,y)) && Abso(sol-getIndication(x-1,y))>=2){
      etat = false 
    }
  }
  if (x!=getMondeLargeur-1 && !aMurOuest(x+1,y)){
    if (sol>=Abso(sol-getIndication(x+1,y)) && Abso(sol-getIndication(x+1,y))>=2){
      etat=false
    }
  }
  if (y!=getMondeHauteur-1 && !aMurNord(x,y-1)){
    if (sol>=Abso(sol-getIndication(x,y-1)) && Abso(sol-getIndication(x,y-1))>=2){
      etat=false
    }
  }
 return etat
}

def Abso(x: Int): Int={
  if (x<0){
    return -x
  }
  return x
}