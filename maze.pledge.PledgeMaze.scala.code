override def run() {
  
    def keepLeftHand(t:Int):Int ={
      var turn:Int=t
      left()
      turn=turn+1
      if ( ! isFacingWall()) {
        forward() ; return turn
        } else {
    					right()
        			turn=turn-1
    					if (! isFacingWall()) {
                forward ; return turn
              } else {
                	right()
                turn=turn - 1
                	if (! isFacingWall()) {
                  	forward ; return turn
                	} else {
                  right()
                    turn= turn - 1 ; return turn
                }
              }
            }
			}
  
  	def dirFree(d:Direction):Boolean  = { 
      var dir:Direction = getDirection()
    	setDirection(d)
      if (isFacingWall) {
        setDirection(dir)
        return false
      } else {
        setDirection(dir)
        return true
      }
    }
  
  var turn:Int=0
  setDirection(Direction.NORTH)
   while (!isOverBaggle()) {
    
    do {
     turn= keepLeftHand(turn)
    } while (! dirFree(Direction.NORTH) && turn!=0)
    
   }
  pickupBaggle()
}
