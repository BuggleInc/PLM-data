override def run() {
  var posXBiscuit:Int = 0
  var posYBiscuit:Int = 0
  
  while (!aBiscuit(posXBiscuit, posYBiscuit)) {
    if (posXBiscuit == getMondeLargeur() - 1) {
      posXBiscuit = 0
      posYBiscuit += 1
    } else {
      posXBiscuit += 1
    }
  } // On a la position du biscuit
  
  var posXNote:Int = posXBiscuit
  var posYNote:Int = posYBiscuit
  var cpt:Int = 0
  
  setIndication(posXNote, posYNote, cpt)			 //On marque 0 Ã  la sortie
  
  while (casesLibres()) {
    for (x <- 0 to getMondeLargeur()-1) {
      for (y <- 0 to getMondeHauteur()-1) {
        if (getIndication(x,y) == cpt) {
          indicationCasesAdjacente(cpt+1, x, y)
        }
      }
    }
    cpt += 1
  }
}

def casesLibres():Boolean = {
  // Retourne s'il reste des cases libres dans la grille
  for (x <- 0 to getMondeLargeur()-1) {
    for (y <- 0 to getMondeHauteur()-1) {
      if (getIndication(x,y)==9999) {
        return true
      }
    }
  }
  return false
}

def indicationCasesAdjacente(n:Int, posX:Int, posY:Int) = {
  if (getIndication(posX, posY-1) == 9999 && !aMurNord(posX, posY)) {
      setIndication(posX, posY-1, n)
    }; if (getIndication(posX-1, posY) == 9999 && !aMurOuest(posX, posY)) {
      setIndication(posX-1, posY, n)
    }; if (posY < getMondeHauteur()-1 && getIndication(posX, posY+1) == 9999 &&  !aMurNord(posX, posY+1)) {
      setIndication(posX, posY+1, n)
    }; if (posX < getMondeLargeur()-1 && getIndication(posX+1, posY) == 9999 &&  !aMurOuest(posX+1, posY)) {
      setIndication(posX+1, posY, n)
    }
}