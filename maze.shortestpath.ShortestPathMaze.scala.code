
override def run() {
  var biscuitX=0
	var biscuitY=0
	var c=0
	var listeX : List[Int] = Nil
	var listeY : List[Int] = Nil

	trouveSortie()
  marque()


def trouveSortie(){
  var i=0
  var j=0
  for(i <- 0 to getMondeLargeur()-1){
    for(j <- 0 to getMondeHauteur()-1){
      if(aBiscuit(i,j)){
        biscuitX=i
        biscuitY=j
      }
    }
  } 
}

def marque(){
  var x=biscuitX
  var y=biscuitY
  var i=0
  var j=0
  var possible=true
  listeX=x::listeX
  listeY=y::listeY
  var lX:List[Int]=Nil
  var lY:List[Int]=Nil
  //while(possible==true){
  while (c< getMondeLargeur()*getMondeHauteur()) {
    
    for(i <- 0 to listeX.length-1){
      setIndication(listeX(i),listeY(i),min(c,getIndication(listeX(i),listeY(i))))
      possible=pos(listeX(i),listeY(i))
    }
    listeX=lX
    listeY=lY
    c+=1
  }
  
}

def pos(x:Int,y:Int): Boolean ={
  var test=false
  if(y!=0 && aMurNord(x,y)==false){
    lX=x::lX
    lY=y-1::lY
    test=true
  }
  if(x!=0 && aMurOuest(x,y)==false){
    lX=x-1::lX
    lY=y::lY
    test=true
  }
  if(y!=getMondeHauteur()-1 && !aMurNord(x,y+1)){
    lX=x::lX
    lY=y+1::lY
    test=true
  }
  if(x!=getMondeLargeur()-1 && !aMurOuest(x+1,y)){
    lX=x+1::lX
    lY=y::lY
    test=true
  }
  return test
}
  
def min(a:Int,b:Int):Int = {
  if(a<=b){
    return a
  }else{
    return b
  }
}
  
}







