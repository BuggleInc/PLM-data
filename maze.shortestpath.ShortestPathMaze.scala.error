Compilation error:
ShortestPathMaze:54: error: not found: type NeighborPos
def processNeighbor(x:Int, y:Int, np:NeighborPos, min:Int) : Int = {
                                     ^ShortestPathMaze:59: error: stable identifier required, but ShortestPathMaze.this.TOP found.
    case TOP =>
         ^ShortestPathMaze:63: error: stable identifier required, but ShortestPathMaze.this.BOTTOM found.
    case BOTTOM =>
         ^ShortestPathMaze:64: error: not found: value hasBottomWall
      if (hasBottomWall(x, y)) return min;
          ^ShortestPathMaze:67: error: stable identifier required, but ShortestPathMaze.this.RIGHT found.
    case RIGHT =>
         ^ShortestPathMaze:68: error: not found: value hasRightWall
      if (hasRightWall(x, y)) return min;
          ^ShortestPathMaze:71: error: stable identifier required, but ShortestPathMaze.this.LEFT found.
    case LEFT =>
         ^