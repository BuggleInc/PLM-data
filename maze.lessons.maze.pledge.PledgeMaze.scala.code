def keepHandOnSideWall() : Integer =
{
  var sommeAngle = 0
  
  if (!estFaceMur())
  {
    avance()
    
    gauche()
    sommeAngle += 1
    if (estFaceMur())
    {
    	droite()
      sommeAngle -= 1
    }
  }
  else
  {
    droite()
    sommeAngle -= 1
  }
  
  return sommeAngle
}

def isDirectionFree(dir:Direction) : Boolean =
{
  var direction = getDirection()
  var mur = false
  
  setDirection(dir)
  if (estFaceMur())
  	mur = true
 	setDirection(direction)
  
  return !mur
}

def gaucheLibre() : Boolean =
{
  var mur = false
  
  gauche()
  if (estFaceMur())
  	mur = true
  droite()
  
  return mur
}

override def run()
{
  /*var peutAllerAuNord = true
  var i = 2
  var suivreMurNord = false*/
  
  
  
  var sommeAngle = 0
  var tombe = false
  
  while(!estSurBiscuit())
  {
    if (estFaceMur() && isDirectionFree(Direction.NORD))
    {
      tombe = true
    }
    else if (!isDirectionFree(Direction.NORD))
    {
      tombe = false
    }
    
    
    
    if (tombe)
    {
      setDirection(Direction.NORD)
      avance()
    }
    else
    {
      sommeAngle += keepHandOnSideWall()
    }
    
    
    
    /*if (isDirectionFree(Direction.NORD) && peutAllerAuNord && !suivreMurNord && gaucheLibre())
    {
      i = 0
      setDirection(Direction.NORD)
      avance()
      
      if (sommeAngle == 0)
      {
        gauche()
        sommeAngle += 1

        if (isDirectionFree(getDirection()))
          avance()
        else
        {
          droite()
          sommeAngle -= 1
        }
      }
    }
    else 
    {
      sommeAngle += keepHandOnSideWall()
      i += 1
    }
    
    if (i >= 2 && !suivreMurNord)
    {
      peutAllerAuNord = true
      droite()
      sommeAngle -= 1
      i = 0
    }
    
    if (getY() == 0)
    {
      suivreMurNord = true
    }*/
  }
  
  prendBiscuit()
}