<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body>
<!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Dessins colorés</h2>

Dans cet exercice, nous allons reproduire un dessin géométrique, que vous
pouvez voir en cliquant sur l'onglet «Objectif».

<p>Votre objectif (ici, et dans tous les programmes bien faits) est d'écrire le
code le plus simple possible. Pour cela, vous veillerez à décomposer le
travail à faire en sous-étape, et à faire réaliser chaque sous-étape par une
méthode particulière.</p>

<p>Si on observe attentivement le modèle à dessiner, on remarque qu'il est
composé de quatre formes en sorte de V de couleurs différentes, et à des
positions différentes.  Un découpage possible est d'écrire une fonction
chargée de faire un V de la couleur indiquée à partir de la position
courante. Son prototype peut être :</p>
<pre>faireV(c: Color)</pre>

<p>Le type de données <code>Color</code> représente naturellement une couleur
en particulier.  Votre code invoquera sans doute <code>faireV</code> avec
les arguments suivants (une couleur différente à chaque appel) :</p>
<ul>
<li>Color.YELLOW</li>
<li>Color.RED</li>
<li>Color.BLUE</li>
<li>Color.GREEN</li>
</ul>

<p>Dans la méthode <code>faireV()</code>, il faut utiliser la méthode
<code>setCouleurBrosse()</code>, qui est prédéfinie dans la buggle, pour
changer la couleur du pinceau, ainsi que <code>leveBrosse()</code> et
<code>baisseBrosse()</code> pour lever et baisser le pinceau.</p>
 
<p>Il faudrait également que la méthode <code>faireV()</code> place la buggle
en position pour dessiner le prochain V directement.</p>
 

<p>À vous de jouer. Je suis sûr que vous parviendrez à trouver d'autres
méthodes à ajouter pour décomposer ce problème et faire en sorte que votre
code reste simple et agréable à lire. Complétez la méthode
<code>run()</code> qui sera appelée automatiquement une fois.
 </p>

</body></html>