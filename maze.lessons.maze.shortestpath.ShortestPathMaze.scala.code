override def run() {
  var posXBiscuit:Int = 0
  var posYBiscuit:Int = 0
  
  while (!aBiscuit(posXBiscuit, posYBiscuit)) {
    if (posXBiscuit == getMondeLargeur() - 1) {
      posXBiscuit = 0
      posYBiscuit += 1
    } else {
      posXBiscuit += 1
    }
  } // On a la position du biscuit
  
  var cpt:Int = 0
  
  setIndication(posXBiscuit, posYBiscuit, cpt) //On marque 0 a la sortie
  
  while (!casesLibres()) { //Tant que la case du Buggle ne porte pas d'indication,
    for (x <- 0 to getMondeLargeur()-1) { //On parcourt chaque case de la grille
      for (y <- 0 to getMondeHauteur()-1) {
        if (getIndication(x,y) == cpt) { //Et si on rencontre une case portant la valeur du compteur,
          indicationCasesAdjacentes(cpt+1, x, y) //On marque les cases adjacentes
        }
      }
    }
    cpt += 1
  }
  /*
  //Il ne reste plus qu'a suivre les indications par valeur decroissante
  var pasAvantBiscuit:Int = getIndication(getX(),getY())
  
  while (pasAvantBiscuit != 0) {
    //On recherche la case a suivre
  	var x:Int = getX()
  	var y:Int = getY()
    var posXaSuivre:Int = x
    var posYaSuivre:Int = y
  	var valeur:Int = getIndication(x,y)
  
  	if (x < getMondeLargeur()-1 && getIndication(x+1,y) == valeur-1) {
    	posXaSuivre = x+1
      posYaSuivre = y
  	} else if (y < getMondeHauteur()-1 && getIndication(x,y+1) == valeur-1) {
    	posXaSuivre = x
      posYaSuivre = y+1
  	} else if (x > 0 && getIndication(x-1,y) == valeur-1) {
    	posXaSuivre = x-1
      posYaSuivre = y
  	} else if (y > 0 && getIndication(x,y-1) == valeur-1) {
    	posXaSuivre = x
      posYaSuivre = y-1
    }
    if ((posXaSuivre == (getX()+1)) && (posYaSuivre == getY())) {
      setDirection(Direction.EST)
      avance()
    } else if ((posXaSuivre == getX()) && (posYaSuivre == (getY()+1))) {
      setDirection(Direction.SUD)
      avance()
    } else if ((posXaSuivre == (getX()-1)) && (posYaSuivre == getY())) {
      setDirection(Direction.OUEST)
      avance()
    } else if ((posXaSuivre == getX()) && (posYaSuivre == getY()-1)) {
      setDirection(Direction.NORD)
      avance()
    } else {
      ecritMessage("Erreur")
    }
  } */
}

def casesLibres():Boolean = {
  // Retourne si la case du buggle a une indication
  return (getIndication(getX(),getY()) < 9999)
}

def indicationCasesAdjacentes(n:Int, posX:Int, posY:Int) = {
  if (posY > 0 && getIndication(posX, posY-1) > n && !aMurNord(posX, posY)) {
    setIndication(posX, posY-1, n)
  }; if (posX > 0 && getIndication(posX-1, posY) > n && !aMurOuest(posX, posY)) {
    setIndication(posX-1, posY, n)
  }; if (posY < getMondeHauteur()-1 && getIndication(posX, posY+1) > n && !aMurNord(posX, posY+1)) {
    setIndication(posX, posY+1, n)
  }; if (posX < getMondeLargeur()-1 && getIndication(posX+1, posY) > n && !aMurOuest(posX+1, posY)) {
    setIndication(posX+1, posY, n)
  }
}