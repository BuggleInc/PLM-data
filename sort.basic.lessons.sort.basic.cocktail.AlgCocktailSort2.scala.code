def cocktailSort2() 
{
var inverse: Boolean=true
var debut: Int=0
var fin: Int=getNombreValeurs()-2

while (inverse==true)
{
	inverse=false
	for (i<- 0 to getNombreValeurs()-2)
	{
		if (plusPetit(i+1,i))
		{
			echange(i,i+1)
			inverse=true
		}
		
	}
	fin=fin-1	
	
	for (i<- getNombreValeurs()-2 to 0 by -1)
	{
		if (plusPetit(i+1,i))
		{
			echange(i,i+1)
			inverse=true
		}
	}
	debut=debut+1
}

}

/* debut=0; fin=lgr-2
Faire
  Pour tout i dans [debut,fin], faire:
    si i et i+1 doivent être échangées, le faire
  fin -= 1 (cela veut dire fin = fin -1)
  Pour tout i dans [fin, debut] en descendant, faire:
    si i et i+1 doivent être échangées, le faire
  debut += 1 (ce qui veut dire debut = debut + 1)
tant qu'au moins l'un des parcours a inversé un élément */