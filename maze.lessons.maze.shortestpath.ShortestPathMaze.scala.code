override def run() {
var Xo:Int=0
var Yo:Int=0
val Xmax=getMondeLargeur-1
val Ymax=getMondeHauteur-1
for (x<-0 to Xmax; y<-0 to Ymax) {
	if(aBiscuit(x,y)==true) {
		Xo=x
		Yo=y
		setIndication(Xo,Yo,0)
	}
}//pose le 0 et garde ses coordonnées
if(Yo!=0 && aMurNord(Xo,Yo)==false) {
	setIndication(Xo,Yo-1,1)
}
if(Xo!=0 && aMurOuest(Xo,Yo)==false) {
	setIndication(Xo-1,Yo,1)
}
if(Yo!=Ymax && aMurNord(Xo,Yo+1)==false) {
	setIndication(Xo,Yo+1,1)
}
if(Xo!=Xmax && aMurOuest(Xo+1,Yo)==false) {
	setIndication(Xo+1,Yo,1)
}//mets des 1 pres des 0
for (i<- 1 to Xmax*Ymax) {
	for (x<-0 to Xmax; y<-0 to Ymax) {
		if ((getIndication(x,y)==9999 && y!=Ymax && getIndication(x,y+1)==i-1 && aMurNord(x,y+1)==false) || (getIndication(x,y)==9999 && y!=0 && getIndication(x,y-1)==i-1 && aMurNord(x,y)==false) || (getIndication(x,y)==9999 && x!=Xmax && getIndication(x+1,y)==i-1 && aMurOuest(x+1,y)==false ) || (getIndication(x,y)==9999 && x!=0 && getIndication(x-1,y)==i-1 && aMurOuest(x,y)==false)) {
			setIndication(x,y,i)  
		}
	}
} //numérote
var Xd:Int=0
var Yd:Int=0
var num:Int=0
while(!estSurBiscuit) {
	Xd=getX
	Yd=getY
	num=getIndication(Xd,Yd)
	if(Yd!=Ymax && getIndication(Xd,Yd+1)==num-1) {
		avance
	} else if(Yd!=0 && getIndication(Xd,Yd-1)==num-1) {
		recule
	} else if(Xd!=Xmax && getIndication(Xd+1,Yd)==num-1) {
		droite
		avance
		gauche
	} else if(Xd!=0 && getIndication(Xd-1,Yd)==num-1) {
		gauche
		avance
		droite
	}
}
prendBiscuit
}
