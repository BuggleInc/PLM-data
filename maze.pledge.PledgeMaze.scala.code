def checkMur():Boolean = {
  gauche()
  if (estFaceMur()){
    droite()
    return true
  }
  droite()
  return false
}

def keepHandOnSideWall(sommeAngle:Int):Int = {
  if(!estFaceMur()){
    if (checkMur()){
      avance()
    } else {
      gauche()
      sommeAngle += 1
      avance()
    }
  } else{
    if (checkMur()){
    	droite()
      sommeAngle += -1
      if (!estFaceMur()){
      	avance()
      } else {
        droite()
        sommeAngle += -1
        avance()
      }
    } else {
      gauche()
      sommeAngle += 1
      avance()
    }
  }
  return sommeAngle
}

def estSurMurNord():Boolean = {
  return getY() == 0
}

def eviteObstacle(){
  var sommeAngle:Int = 0
  if (estFaceMur()){
    do{
    	sommeAngle = keepHandOnSideWall(sommeAngle)
    }while (sommeAngle != 0 && isDirectionFree(Direction.NORTH))
  } else {avance()}
}

def isDirectionFree(dir:Direction):Boolean = {
  var direct:Direction = getDirection()
  setDirection(dir)
  if (estFaceMur()){
    setDirection(direct)
    return true
  }
  setDirection(direct)
  return false
}

override def run() {
  while (!estSurBiscuit()){
    eviteObstacle()
  }
  prendBiscuit()
}