override def run() {

 	//Trouver la Sortie
  var xSortie = 0
  var ySortie = 0
  var Largeur = getMondeLargeur()
  var Hauteur = getMondeHauteur()
  
  for (x <- 0 to Largeur-1; y <- 0 to Hauteur-1) {
    
    if (aBiscuit(x,y)) {
      
      xSortie = x; ySortie = y;
      
    }
    
  }
  //Lui Mettre 0
  var distance = 0
  var compteurCases = 0
  setIndication(xSortie,ySortie,distance)
  distance = distance + 1
  compteurCases = compteurCases + 1
  //Marquer le reste de la grille
  while (compteurCases < Largeur*Hauteur) {
    
    //Chercher des cases à marquer
    for (x <- 0 to Largeur-1; y <- 0 to Hauteur-1) {
      
      if (getIndication(x,y) == distance-1) {
        //Les Marquer
        
        //Nord
        if (y>0 && !aMurNord(x,y) && getIndication(x,y-1)==9999) {
          
          setIndication(x,y-1,distance)
          compteurCases = compteurCases + 1
          
        //Sud
        }
        if (y<Hauteur-1 && !aMurNord(x,y+1) && getIndication(x,y+1)==9999) {
          
          setIndication(x,y+1,distance)
          compteurCases = compteurCases + 1
          
        //Est  
        }
        if (x<Largeur-1 && !aMurOuest(x+1,y) && getIndication(x+1,y)==9999) {
          
          setIndication(x+1,y,distance)
          compteurCases = compteurCases + 1
        
        //Ouest  
      	}
        if (x>0 && !aMurOuest(x,y) && getIndication(x-1,y)==9999) {
          
          setIndication(x-1,y,distance)
          compteurCases = compteurCases + 1
          
        }
      
      
    	}
    	
    //Augmenter la distance
    
    
  	}
    
    distance = distance + 1
  
  
  }
  
  while (!estSurBiscuit()) {
    
    //Determiner La Meilleure Direction™
    var valDirection =  Array(9999,9999,9999,9999) //N S E O
    var Directions = Array(Direction.NORD,Direction.SUD,Direction.EST,Direction.OUEST)
    
    //Nord
    if (getY()>0 && !aMurNord(x,y)) {valDirection(0) = getIndication(x,y-1)}
    
    //Sud
    if (getY()<Hauteur-1 && !aMurNord(x,y+1)) {valDirection(1) = getIndication(x,y+1)}
    
    //Est
    if (getX()<Largeur-1 && !aMurOuest(x+1,y)) {valDirection(2) = getIndication(x+1,y)}
    
    //Ouest
    if (getX()>0 && !aMurOuest(x,y)) {valDirection(3) = getIndication(x-1,y)}
    
    
    var dirMin = Directions(valDirection.indexOf(valDirection.min))
    //S'orienter vers elle
    setDirection(dirMin)
    //avancer
    avance()
    
  }
 
 prendBiscuit()

}