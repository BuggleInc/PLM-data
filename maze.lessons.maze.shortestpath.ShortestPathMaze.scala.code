def goBiscuit() {
  for(i<- 0 to (getMondeLargeur()-1)){
    for(j<- 0 to (getMondeHauteur()-1)){
    	if(aBiscuit(i,j)){
        tracechemin(i,j,0);
        return
      }
  	}
  }
}

def tracechemin(x:Int,y:Int,nb:Int):Boolean = {
  
  setIndication(x,y,nb);

  
  if(y+1<getMondeHauteur()){
    if(!aMurNord(x,y+1) && getIndication(x,y+1)>nb)	{
      tracechemin(x,y+1,nb+1)
    }
  }
  if(x-1>=0){
    if(!aMurOuest(x,y) && getIndication(x-1,y)>nb){
      tracechemin(x-1,y,nb+1)
    }
  }
  if(y-1>=0){
    if(!aMurNord(x,y) && getIndication(x,y-1)>nb)		{
      tracechemin(x,y-1,nb+1)
    }
  }
  if(x+1<getMondeLargeur() && getIndication(x+1,y)>nb){
    if(!aMurOuest(x+1,y)){
      tracechemin(x+1,y,nb+1)
    }
  }
  
  return true
  
}

def yaller(){
  var x:Int = getX();
  var y:Int = getY();
  
  var nbon:Int = getIndication(x,y);

  
  if(getIndication(Math.min(x+1,getMondeHauteur()-1),y)==nbon-1 && !aMurOuest(Math.min(x+1,getMondeHauteur()-1),y))	{
    setDirection(Direction.EAST);
  }
  if(getIndication(x,Math.min(y+1,getMondeLargeur()-1))==nbon-1 && !aMurNord(x,Math.min(y+1,getMondeLargeur()-1)))	{
    setDirection(Direction.SOUTH);
  }
  if(getIndication(Math.max(x-1,0),y)==nbon-1 && !aMurOuest(x,y))	{
    setDirection(Direction.WEST);
  }
  if(getIndication(x,Math.max(y-1,0))==nbon-1 && !aMurNord(x,y))	{
    setDirection(Direction.NORTH);
  }
  
  avance();
  
}

override def run() {
  goBiscuit();
  while(!estSurBiscuit()){
    yaller()
  }
  prendBiscuit();
}