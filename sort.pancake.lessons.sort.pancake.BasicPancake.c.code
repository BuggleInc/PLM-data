void solve() {
	int rank, stackSize, sorted;

    stackSize = getStackSize();
    swapped = 0;

    do {

        swapped = 0;

        for (rank = 0 ; rank < stackSize - 1; rank++ ) { 

            if(getPancakeRadius(rank) > getPancakeRadius(rank + 1)) {
                // When the pancake above is bigger than the next one...
                
                swapped = 1; // We have to check all the pancakes again next time
                
                flip(rank + 2); // Flip all the pancakes to get the two get on top
                flip(2); // Flip the two pancakes to sort
                flip(rank + 2); // Flip all the pancakes back in place
            }
        }
    } while (swapped)
}