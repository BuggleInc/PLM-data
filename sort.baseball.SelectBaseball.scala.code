override def run(){
  var nbrB:Int = getBasesAmount();
  var posBABouger:Int = 0;
  var numABouger:Int = 0;
  var posJB:Int = 0;
  var posJP:Int = 0;
  init();

  for (i<-0 to nbrB-1) {
		posJB = trouveBaseJoueur(i,nbrB)._1
		posJP = trouveBaseJoueur(i,nbrB)._2
    deplaceTrou(posJB,posJP)
    placeJ(posJB,posJP,i)
  }
  
}

def init(){
  var n = getHoleBase();
  for (i<-0 to n) {
    if (getHoleBase()!=0) {
      move((getHoleBase()-1),0)
    }
  }
}

def trouveBaseJoueur(posF:Int, nbrB:Int):(Int,Int)={
  for (j<-posF+1 to nbrB) {
    if (getPlayerColor(j,0)==posF) {
			return (j,0)
    } 
    else if (getPlayerColor(j,1)==posF) {
       return (j,1)
    }
  }
  return (posF,0)
}

def deplaceTrou(posJB:Int,posJP:Int){
  var pos = getHoleBase();
  for (i<-pos to posJB-2){
    move(getHoleBase()+1,0);
  }
    
} 

def placeJ(posJB:Int,posJP:Int,posF:Int) {
  var n = getHoleBase();
  var posJB2 = posJB; 
  var posJP2 = posJP;
  var actJB = 0;
  var actJP = 0;
  while (posJB2!=posF+1) {
    if (getHoleBase() < posJB2) {
      actJB = getHoleBase();
      actJP = getHolePosition();
      move(posJB2,posJP2);
      posJB2= actJB;
      posJP2= actJP;
    }
    else if (getHoleBase() > posJB2){
      move(posJB2,(posJP2+1)%2);
    }
    else {
      move(posJB2-1,0)
    }
  }
  move(posJB2,(posJP2+1)%2);
  if (getPlayerColor(posJB2-1,0)==posJB2-1){
    move(posJB2-1,1)
  }
  else {
    move(posJB2-1,0)
  }
  move(JB2,JP2)
  
}