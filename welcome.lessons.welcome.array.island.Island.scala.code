def island(num:Array[Int]): Int = {
	var T = new Array[Int] (num.length)
	for (i <- 0 to num.length) {
		T(i)=num(i)
	}
	var M = maxValue(num)
	var cpt = 0
	return maxValue(T)
	while (M != 0) {
		cpt=cpt + seqInArray(T,M)
		for (i <-1 to T.length-2) {
			if (T(i)==M) {
				if (T(i-1)>T(i+1)) {
					T(i)=T(i-1)		
				} else {
					T(i)=T(i+1)
				}
			}
		}
		M = maxValue(T)
	}
	return cpt	
}

def maxValue(nums:Array[Int]): Int = {
	var max:Int = nums(0)
	for (i<- 1 to nums.length-1) {
		if (nums(i)>max) {
			max=nums(i)
		}
	}
	return max
}
def seqInArray(T:Array[Int],n:Int): Int ={
	var cpt:Int = 0
	var last=T(0)
	for (i<- 1 to T.length-1) {
		if ((T(i)==n) && (T(i)!=last)) {
			cpt = cpt +1
		}
		last=T(i)
	}
	return cpt
}




