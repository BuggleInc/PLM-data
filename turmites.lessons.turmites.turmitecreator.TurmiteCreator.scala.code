var rule:Array[Array[Array[Int]]] = Array(Array(Array(1,8,0),Array(0,1,0),Array(Array(1,8,1),Array(0,1,1)))) 
val nbSteps:Int = 8342; 
                                                                             
def initLangton(name:String) {
    val nbColors = name.length(); /* As many colors as letters in the ant's name */

    rule = new Array[Array[Array[Int]]] (1); /* one state only */
    rule(0) = new Array[Array[Int]] (nbColors); /* As many colors as letters in the ant's name */
    for (i <- 0 to nbColors-1) {
        rule(0)(i) = new Array[Int] (3); /* every command set has 3 elements */ 

        rule(0)(i)(NEXT_COLOR) = (i+1) % nbColors;

        if (name.charAt(i) == 'L') {
            rule(0)(i)(NEXT_MOVE) = LEFT;            
        } else if (name.charAt(i) == 'R') {
            rule(0)(i)(NEXT_MOVE) = RIGHT;
        } else {
            getGame().getLogger().log("Unknown command in your ant's name: "+name.charAt(i));
        }

        rule(0)(i)(NEXT_STATE) = 0; /* only one state */

def step(){
  var state =0

  def step(colors:Array[Color], rule:Array[Array[Array[Int]]] ) {
      def colore(c:Color){
      setCouleurBrosse(c)
      baisseBrosse()
      leveBrosse()
    }
    var col =0
    while(getCouleurSol!=colors(col)){
      col+=1
    }
    def mouv(m:Int){
      if(m==0){}
      if(m==1){avance()}
      if(m==2){gauche();avance()}
      if(m==4){retourne();avance()}
      if(m==8){droite();avance()}
    }
    colore(colors(rule(state)(col)(0)))
    mouv(rule(state)(col)(1))
    state=rule(state)(col)(2)
  }
}
      
      