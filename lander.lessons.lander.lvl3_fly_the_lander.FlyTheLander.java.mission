<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
  </style>
</head><body><!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h1>Fly the Lander!</h1>

<p>After 30 days of staring at rocks and eating cereals you decide it's time to
go explore other parts of the planet.</p>

<p>You fly for a while and suddenly realize you're almost out of fuel.
Unfortunately you're in a delicate situation and the autopilot is helpless.
You will have to pilot the lander yourself. Your mission is to <b>land the
lander on a flat zone with a vertical speed less than 10 m/s, an horizontal
speed less than 5 m/s and an angle of 0°.</b></p>

<p>You must define two functions: <code>void init()</code> and <code>void
step()</code>. <code>init</code> is called once just after you press "Run". You
can use it for chosing some flat zone. <code>step</code> is called every 0.1
second and is used for adjusting the lander's thrust and angle. As in the first
exercise the lander's thrust is adjusted via <code>void setDesiredThrust(int
desiredThrust)</code>. But you can also control its angle via <code>void
setDesiredAngle(double desiredAngle)</code>. An angle of 0° denotes a vertical
position where the "head" of the lander points up. This is the angle you must
land with. A positive angle denotes a left-leaning lander, a negative angle a
right-leaning one. You cannot lean more than by ±90°, and the angle can vary by
at most ±5° in one step.</p>

<p>As in the previous lesson, <code>Iterable<Point> getGround()</code> returns
the vertices of the ground's profile from left to right. You can query the
lander's position via <code>double getX()</code> and <code>double getY()</code>.
You can also query its speed via <code>double getSpeedX()</code> and
<code>double getSpeedY()</code>. Its angle is obtained via <code>double
getAngle()</code>. Finally <code>int getThrust()</code> and <code>int
getFuel()</code> respectively return the thrust and remaining amount of
fuel.</p>

<p>As before, your program must safely land the lander in all the situations
encountered so far in addition to this new one.</p>

<p>Good luck, try not to crash!</p>
</body></html>