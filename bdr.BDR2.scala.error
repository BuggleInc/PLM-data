Compilation error:
BDR2:1: error: not found: value message
message match {
^BDR2:2: error: not found: value readMessage
  case readMessage() if readMessage()== "R" => right() ; forward()
       ^BDR2:3: error: not found: value readMessage
  case readMessage() if readMessage() == "L" => left() ; forward()
       ^BDR2:4: error: not found: value readMessage
  case readMessage() if readMessage() == "I" => right() ; forward()
       ^BDR2:5: error: not found: value readMessage
  case readMessage() if readMessage() == "A" => forward()
       ^BDR2:6: error: not found: value readMessage
  case readMessage() if readMessage() == "B" => forward() ; forward()
       ^BDR2:7: error: not found: value readMessage
  case readMessage() if readMessage() == "C" => forward();forward();forward();
       ^BDR2:8: error: not found: value readMessage
  case readMessage() if readMessage() == "D" => forward();forward();forward();forward()
       ^BDR2:9: error: not found: value readMessage
  case readMessage() if readMessage() == "E" => forward();forward();forward();forward();forward()
       ^BDR2:10: error: not found: value readMessage
  case readMessage() if readMessage() == "F" => forward();forward();forward();forward();forward();forward()
       ^BDR2:11: error: not found: value readMessage
  case readMessage() if readMessage() == "Z" => backward()
       ^BDR2:12: error: not found: value readMessage
  case readMessage() if readMessage() == "Y" => backward();backward()
       ^BDR2:13: error: not found: value readMessage
  case readMessage() if readMessage() == "X" => backward();backward();backward()
       ^BDR2:14: error: not found: value readMessage
  case readMessage() if readMessage() == "W" => backward();backward();backward();backward()
       ^BDR2:15: error: not found: value readMessage
  case readMessage() if readMessage() == "V" => backward();backward();backward();backward();backward()
       ^BDR2:16: error: not found: value readMessage
  case readMessage() if readMessage() == "U" => backward();backward();backward();backward();backward();backward()
       ^