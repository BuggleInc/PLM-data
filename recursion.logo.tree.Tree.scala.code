def retourEnPlace(length:Double, angle:Double) {
  leveCrayon();
  gauche(180);
  avance (length);
  gauche(180-angle)
  baisseCrayon();
}

def subTree(steps:Int, length:Double, angle:Double, shrink:Double, gAuche:Boolean)    {
  
	if (steps==0) {
    retourEnPlace(length, angle);
  }
  else if (gAuche == true){
    gauche(angle); //viser gauche 
  	avance(length); //tronc
    
    subTree(steps-1, length*shrink, angle, shrink); //faire le sous arbre
  }
  else {
    avance(length); //tronc
    
    droite(angle); //viser droite 
    subTree(steps-1, length*shrink, angle, shrink, false); //faire le sous arbre
  }
  }
def tree(steps:Int, length:Double, angle:Double, shrink:Double)    {
	subTree(steps, length, angle, shrink, true);
  subTree(steps, length, angle, shrink, false);
}