alarmClock:4: error: unclosed character literal
      return '7:00';
             ^alarmClock:4: error: Non-zero integral values may not have a leading zero.
      return '7:00';
                ^alarmClock:4: error: unclosed character literal
      return '7:00';
                  ^alarmClock:6: error: unclosed character literal
     	return '10:00'; 
               ^alarmClock:6: error: Non-zero integral values may not have a leading zero.
     	return '10:00'; 
                   ^alarmClock:6: error: unclosed character literal
     	return '10:00'; 
                     ^alarmClock:10: error: unclosed character literal
      return '10:00';
             ^alarmClock:10: error: Non-zero integral values may not have a leading zero.
      return '10:00';
                 ^alarmClock:10: error: unclosed character literal
      return '10:00';
                   ^alarmClock:12: error: unclosed character literal
     	return 'off';
                   ^alarmClock:-6: error: Missing closing brace `}' assumed here
try {
^alarmClock:1: error: expected class or object definition
def alarmClock(day:Int, vacation:Boolean): String = {
^alarmClock:4: error: unclosed character literal
      return '7:00';
             ^alarmClock:4: error: Non-zero integral values may not have a leading zero.
      return '7:00';
                ^alarmClock:4: error: unclosed character literal
      return '7:00';
                  ^alarmClock:6: error: unclosed character literal
     	return '10:00'; 
               ^alarmClock:6: error: Non-zero integral values may not have a leading zero.
     	return '10:00'; 
                   ^alarmClock:6: error: unclosed character literal
     	return '10:00'; 
                     ^alarmClock:10: error: unclosed character literal
      return '10:00';
             ^alarmClock:10: error: Non-zero integral values may not have a leading zero.
      return '10:00';
                 ^alarmClock:10: error: unclosed character literal
      return '10:00';
                   ^alarmClock:12: error: unclosed character literal
     	return 'off';
                   ^