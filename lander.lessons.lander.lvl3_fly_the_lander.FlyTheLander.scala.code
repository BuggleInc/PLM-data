  override def initialize(){
  }

  override def step() {
  	val Liste = getSol()
  	var debut = new Array[Int] (2)
  	var fin = new Array[Int] (2)y
  	for (i <- 0 to Liste.length-2) {
  		if (Liste(i).y==Liste(i+1).y) {
  			debut(0)=Liste(i).x
  			debut(1)=Liste(i).y
  			fin(0)=Liste(i+1).x
  			fin(1)=Liste(i+1).y
  		}
  	}
  	
  }
def goToFlat(a:Double,b:Double) {
	var sens=0
	if (getX<a) {
		sens=-1
	} else if (getX>b) {
		sens=1
	} else {
		sens=0
	}
	if (sens!=0) {	
		while (Math.abs(getAngle)<45) {
			setAngle(getAngle-sens*5)
		}
		while ((getX<a) || getX>b) {
			setPousseeDesiree(4)
		}
		while(get













		
}
