def step(colors:Array[Color], rule:Array[Array[Array[Int]]] ) {
	val c=0
	val state=0
	while (c<colors.length) {
		if (getCouleurSol()=colors(c)) {
			NextColor(state, c, colors, rule);
			NextMove(state, c, rule);
			state=NextState(state, c, rule);
			c=color.length
		}
		c=c+1
	}

	def setCouleurSol(c:Color) {
		setCouleurBrosse(c);
		baisseBrosse();
		leveBrosse();
		}
	
	def NextColor(state:Int, c:Int, colors:Array[Color], rule:Array[Array[Array[Int]]]) {
		var a=0
		a=rule(state)(c)(0)
		setCouleurSol(colors(r))
	}
	
	def NextMove(state:Int, c:Int, rule:Array[Array[Array[Int]]]) {
		rule(state)(c)(1) match {
			case 0 => 
			case 1 => avance();
			case 2 => gauche(); avance();
			case 4 => retourne(); avance();
			case 8 => droite(); avance();
		}
	}
	
	def NextState(state:Int, c:Int, rule:Array[Array[Array[Int]]]) {
		var b=0
		b=rule(state)(c)(2)
		return b
	}
}