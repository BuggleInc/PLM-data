public void cocktailSort2() {

	int debut = 0;
	int lgr = getNombreValeurs();
	int fin = lgr-2;
	boolean inversion = true;

	do
	{
		inversion = false;
		for(int i = debut; i<= fin ; i++)
		{
			if(getValeur(i)>getValeur(i+1))
			{
				echange(i,i+1);
				inversion = true;
				fin--;
				
			}
			
		}
		for(int i = fin; i>= debut; i--)
		{
			if(getValeurs(i)>getValeurs(i+1))
			{
				echange(i,i+1);
				inversion = true;
				debut++;
			}
		}
		
	}while(inversion)
	


}


debut=0; fin=lgr-2
Faire
  Pour tout i dans [debut,fin], faire:
    si i et i+1 doivent être échangées, le faire
  fin -= 1 (cela veut dire fin = fin -1)
  Pour tout i dans [fin, debut] en descendant, faire:
    si i et i+1 doivent être échangées, le faire
  debut += 1 (ce qui veut dire debut = debut + 1)
tant qu'au moins l'un des parcours a inversé un élément