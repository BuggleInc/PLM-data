def testV(x:Int,y:Int):Boolean = {return (x < getMondeLargeur() -1 && y < getMondeHauteur() -1)}
def casP(x:Int,y:Int,k:Int) {
  var Tx = new Array[Int] (4)
  var Ty = new Array[Int] (4)
  Tx(0) = -1
  Tx(1) = -1
  Tx(2) = -1
  Tx(3) = -1
  Ty(0) = -1
  Ty(1) = -1
  Ty(2) = -1
  Ty(3) = -1
  if (testV(x,y-1) {if (!aMurNord(x,y) && getIndication(x,y-1)!=9999) {setIndication(x,y-1,k+1);Tx(0)=x;Ty(0)=y-1}}
      if (testV(x-1,y)) {if (!aMurOuest(x,y) && getIndication(x-1,y)!=9999) {setIndication(x-1,y,k+1);Tx(1)=x-1;Ty(1)=y}}
      if (testV(x,y+1)) {if (!aMurNord(x,y+1) && getIndication(x,y+1)!=9999) {setIndication(x,y+1,k+1);Tx(2)=x;Ty(2)=y+1}}
      if (testV(x+1,y)) {if (!aMurOuest(x+1,y) && getIndication(x+1,y)!=9999) {setIndication(x,y+1,k+1);Tx(3)=x+1;Ty(3)=y}}                                                  
  for (i<-0 to 3) {if (Tx(i)!= -1) {casP(Tx(i),Ty(i),k+1)}}
}

override def run() {
    // Your code here
  var x = 0
  var y = 0
  while (!aBiscuit(x,y)) {if (x!=getMondeLargeur()-1) {x=x+1} else {x=0;y=y+1}}
  var a=x
  var b=y
  setIndication(a,b,0)
  casP(a,b,0)
  
}