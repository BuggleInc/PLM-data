def getBaggleCoords():Array[Int] = {
  for(i <- 0 to getWorldHeight() - 1) {
    for(j <- 0 to getWorldWidth() - 1) {
      if(hasBaggle(j, i)) {
        return Array(j, i)
      }
    }
  }
  
  return Array(5, 2)
}

def mHasTopWall(coords:Array[Int]):Boolean = {
  if(hasTopWall(coords(0), coords(1))) {
    return true;
  }
  
  return false
}

def mHasLeftWall(coords:Array[Int]):Boolean = {
  if(hasLeftWall(coords(0), coords(1))) {
    return true
  }
  
  return false
}

override def run() {
  var baggleCoords = getBaggleCoords();
  setIndication(baggleCoords(0), baggleCoords(1), 0);
  
  var currentCoords = baggleCoords;
  var i = 1;
  
  if(mHasTopWall(currentCoords) && mHasLeftWall(currentCoords)) {
    currentCoords(1) += 1
    setIndication(currentCoords(0), currentCoords(1), i)
  }
}