BDR2:3: error: illegal start of simple pattern
	case if(litMessage()=="R") => droite() ; avance()
             ^BDR2:3: error: '=>' expected but ';' found.
	case if(litMessage()=="R") => droite() ; avance()
                                               ^BDR2:4: error: illegal start of simple pattern
	case if(litMessage()=="L") => gauche() ; avance()
             ^BDR2:4: error: '=>' expected but ';' found.
	case if(litMessage()=="L") => gauche() ; avance()
                                               ^BDR2:5: error: illegal start of simple pattern
	case if(litMessage()=="I") => retourne(); avance()
             ^BDR2:5: error: '=>' expected but ';' found.
	case if(litMessage()=="I") => retourne(); avance()
                                                ^BDR2:6: error: illegal start of simple pattern
	case if(litMessage()=="A") => avance();
             ^BDR2:6: error: '=>' expected but ';' found.
	case if(litMessage()=="A") => avance();
                                              ^BDR2:7: error: illegal start of simple pattern
	case if(litMessage()=="B") => avance() ; avance()
             ^BDR2:7: error: '=>' expected but ';' found.
	case if(litMessage()=="B") => avance() ; avance()
                                               ^BDR2:8: error: illegal start of simple pattern
	case if(litMessage()=="C") => avance(); avance(); avance()
             ^BDR2:8: error: '=>' expected but ';' found.
	case if(litMessage()=="C") => avance(); avance(); avance()
                                              ^BDR2:9: error: illegal start of simple pattern
	case if(litMessage()=="D") => avance(); avance(); avance(); avance();
             ^BDR2:9: error: '=>' expected but ';' found.
	case if(litMessage()=="D") => avance(); avance(); avance(); avance();
                                              ^BDR2:10: error: illegal start of simple pattern
	case if(litMessage()=="E") => avance(); avance(); avance(); avance(); avance() 
             ^BDR2:10: error: '=>' expected but ';' found.
	case if(litMessage()=="E") => avance(); avance(); avance(); avance(); avance() 
                                              ^BDR2:11: error: illegal start of simple pattern
	case if(litMessage()=="F") => avance(); avance(); avance(); avance(); avance() 
             ^BDR2:11: error: '=>' expected but ';' found.
	case if(litMessage()=="F") => avance(); avance(); avance(); avance(); avance() 
                                              ^BDR2:12: error: illegal start of simple pattern
	case if(litMessage()=="Z") => recule();
             ^BDR2:12: error: '=>' expected but ';' found.
	case if(litMessage()=="Z") => recule();
                                              ^BDR2:13: error: illegal start of simple pattern
	case if(litMessage()=="Y") => recule(); recule()
             ^BDR2:13: error: '=>' expected but ';' found.
	case if(litMessage()=="Y") => recule(); recule()
                                              ^BDR2:14: error: illegal start of simple pattern
	case if(litMessage()=="X") => recule(); recule(); recule()
             ^BDR2:14: error: '=>' expected but ';' found.
	case if(litMessage()=="X") => recule(); recule(); recule()
                                              ^BDR2:15: error: illegal start of simple pattern
	case if(litMessage()=="W") => recule(); recule(); recule(); recule()
             ^BDR2:15: error: '=>' expected but ';' found.
	case if(litMessage()=="W") => recule(); recule(); recule(); recule()
                                              ^BDR2:16: error: illegal start of simple pattern
	case if(litMessage()=="V") => recule(); recule(); recule(); recule(); recule ()
             ^BDR2:16: error: '=>' expected but ';' found.
	case if(litMessage()=="V") => recule(); recule(); recule(); recule(); recule ()
                                              ^BDR2:17: error: illegal start of simple pattern
	case if(litMessage()=="U") => recule(); recule(); recule(); recule(); recule (); recule ()
             ^BDR2:17: error: '=>' expected but ';' found.
	case if(litMessage()=="U") => recule(); recule(); recule(); recule(); recule (); recule ()
                                              ^