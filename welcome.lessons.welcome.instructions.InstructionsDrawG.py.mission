<html><head>  <style type="text/css">
    body { font-family: tahoma, "Times New Roman", serif; font-size:10px; margin:10px; }
    code { background:#EEEEEE; }
    pre { background: #EEEEEE;
          margin: 5px;
          padding: 6px;
          border: 1px inset;
          width: 640px;
          overflow: auto;
          text-align: left;
          font-family: "Courrier New", "Courrier", monospace; }
   .comment { background:#EEEEEE;
              font-family: "Times New Roman", serif;
              color:#00AA00;
              font-style: italic; }
.Java   {visibility: visible; color:#FF0000}
.java   {visibility: visible; color:#FF0000}
.python {visibility: visible; color:#008000}
.Python {visibility: visible; color:#008000}
.scala  {visibility: visible; color:#0000FF}
.Scala  {visibility: visible; color:#0000FF}
  </style>
</head><body><!-- Please don't translate this file but l10n/missions/plm.pot (see https://github.com/oster/PLM/wiki/Working-on-translations) -->
<h2>Writing more complex programs</h2>
  Now that we know how to draw things on the board, we'll enjoy this ability and 
  draw a beautiful G on the board (check Objective panel for details on what is 
  expected). 

  <p>When you write a quite complex program, it is sometimes useful to <b>add
   comments</b> to simplify the code reviews afterward. Here for example, it's 
   quite easy to get lost in the drawing process, and you may want to add 
   comments like <i>vertical bar done</i> or <i>finished drawing the G. Time to 
   move back to initial position</i>. Commenting your code is almost mandatory if you 
   (or someone else) want to read it afterward, although over-commenting 
   (describing obvious stuff) is a bad idea as the important idea get lost in the noise.</p>
   
  <p>There is <font color="FF0000">three</font><font color="00AFFF">two</font> types of comments in <font color="FF0000">Java</font><font color="008000">python</font><font color="0000FF">Scala</font><font color="00FF00">C</font>, instructing 
  the <font color="EEEEEE">compiler</font><font color="008000">interpreter</font> to not read the text you add for humans:</p>
   
  <ul>
    <li><b>Comments on a single line</b>. When the <font color="EEEEEE">compiler</font><font color="008000">interpreter</font>
      encounters the symbol <font color="EEEEEE">//</font><font color="008000">#</font>, it ignores the end of the line.</li>      
    <li><b>Comments on several lines</b>. The <font color="EEEEEE">compiler</font><font color="008000">interpreter</font>
      ignores anything placed between 
      <font color="EEEEEE">the symbols /* and */ even if they are placed on differing lines.</font>
      <font color="008000">a line beginning with ''' until the next line ending with '''.</font></li>
  </ul>

<pre>
methodCallReadByThe<font color="EEEEEE">Compiler</font><font color="008000">Interpreter</font>()<font color="FFFF00">;</font> <span class="comment"><font color="EEEEEE">//</font><font color="008000">#</font> all this is ignored</span>
otherCall()<font color="FFFF00">;</font> <font color="EEEEEE"><span class="comment">/* This is</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="comment"> also ignored */</span></font>
<font color="008000"><span class="comment">''' This is</span>
<span class="comment">also ignored  '''</span></font>
yetAnotherCall()<font color="FFFF00">;</font>
</pre>  
  <p class="Java">There is a third kind of comments in Java, between /** and */, which are read by a
specific program called JavaDoc to generate automatically the documentation
explaining how to use the code. These comments must follow a very precise
formalism.</p>

  <p class="Python">The comments on several lines are often used to document how to use the code, while others 
  are more used to describe how this code works.</p>
</body></html>